<?xml version="1.0"?>
<doc>
<assembly>
<name>
Kostal.Testman.Framework.Base
</name>
</assembly>
<members>
<member name="T:Kostal.Testman.Framework.Base.AlarmContainer">
 <summary>
 Contains all available alarm adapters.
 Singleton class.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.AlarmContainer.#ctor">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.AlarmContainer" /> class.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.AlarmContainer.EnabledAlert">
 <summary>
 Gets the first alarm channel that is turned on.
 </summary>
 <returns>first enabled channel as <see cref="T:Kostal.Testman.Framework.Base.AlarmChannelType"/>. If none is enabled <c>nothing/null</c> is returned.</returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.AlarmContainer.GeneralAlarm">
 <summary>
 Gets or sets the adapter for general alarm.
 </summary>
 <value>
 The general alarm adapter.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.AlarmContainer.ResetEnabled">
 <summary>
 Gets or sets the Enable flag to reset the Alarm.
 </summary>
 <value>
 The enable flag to reset the Alarm 
 </value>   
</member>
<member name="P:Kostal.Testman.Framework.Base.AlarmContainer.EmergencyStop">
 <summary>
 Gets or sets the adapter for emergency stop alarm.
 </summary>
 <value>
 The emergency stop alarm adapter.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.AlarmContainer.SafetyProtection">
 <summary>
 Gets or sets the adapter for safety protection alarm.
 </summary>
 <value>
 The safety protection alarm adapter.
 </value>
</member>
<member name="M:Kostal.Testman.Framework.Base.AlarmEventArgs.#ctor(System.Boolean)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.AlarmEventArgs" /> class.
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.Alarm.AlarmStates">
 <summary>
 States of Alarm
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Alarm.AlarmStates.NoAlarm">
 <summary>
 There is no alarm
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Alarm.AlarmStates.LogicalAlarm">
 <summary>
 The physical alarm is not present, bu the logical alarm was not resetted
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Alarm.AlarmStates.PhysicalAlarm">
 <summary>
 The physical alarm indicates an alarm signaled by hardware
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.Alarm.IApplicationAlarmController">
 <summary>
 Defines the public members of the AlarmController
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.Alarm.IApplicationAlarmController.State">
 <summary>
 Gets the summary state of all AlarmChannels.
 </summary>
 <value>
 The state.
 </value>
</member>
<member name="M:Kostal.Testman.Framework.Base.Alarm.IApplicationAlarmController.Reset">
 <summary>
 Resets this alarm status.
 </summary>
 <returns>True, if successful, otherwise false.</returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.Alarm.IApplicationAlarmController.PhysicalAlarms">
 <summary>
 Gets the collection of all active alarm channels.
 </summary>
 <returns></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.Alarm.IApplicationAlarmController.Indications">
 <summary>
 Gets the collection of all active indications.
 </summary>
 <returns></returns>
</member>
<member name="T:Kostal.Testman.Framework.Base.Alarm.IAlarmIndication">
 <summary>
 Defines a physical alarm
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.Alarm.IAlarmIndication.Id">
 <summary>
 Gets the identifier.
 </summary>
 <value>
 The identifier.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Alarm.IAlarmIndication.TypeId">
 <summary>
 Gets the type of the alarm.
 </summary>
 <value>
 The type.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Alarm.IAlarmIndication.Description">
 <summary>
 Gets the description.
 </summary>
 <value>
 The description.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Alarm.IAlarmIndication.RaisedDateTime">
 <summary>
 Gets the date time of the raising of this alarm.
 </summary>
 <value>
 The raised date time.
 </value>
</member>
<member name="T:Kostal.Testman.Framework.Base.Alarm.PredefinedAlarmTypes">
 <summary>
 Defines different types of alarms
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Alarm.PredefinedAlarmTypes.EmergencyStop">
 <summary>
 The alarm is generated by an emergency stop
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Alarm.PredefinedAlarmTypes.Safety">
 <summary>
 The alarm is generated by a safety indication
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Alarm.PredefinedAlarmTypes.Door">
 <summary>
 The alarm is generated by a security door
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Alarm.PredefinedAlarmTypes.LightCurtain">
 <summary>
 The alarm is generated by a light curtain
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.IArticleController.Selected">
 <summary>
 Gets the current selected article.
 </summary>
 <value>
 The current selected article.
 </value>
</member>
<member name="M:Kostal.Testman.Framework.Base.IArticleController.Select(Kostal.Testman.Framework.Base.ArticleConfigurationSet)">
 <summary>
 Activates the provided article and causes Testman framework to start changing the article.
 </summary>
 <param name="articleItem">article to be activated</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.IArticleController.Select(System.String)">
 <summary>
 Activates the provided article and causes Testman framework to start changing the article.
 </summary>
 <param name="articleId">id of the article to be activated</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.IArticleController.GetArticles">
 <summary>
 Returns all articles loaded by the current IArticleProvider.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.Components.ICommand">
 <summary>
 Interface definition for a command
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ICommand.Id">
 <summary>
 Gets the identifier.
 </summary>
 <value>
 The identifier.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ICommand.Text">
 <summary>
 Gets the text.
 </summary>
 <value>
 The text.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ICommand.UserLevel">
 <summary>
 Gets the specified Userlevels for this command.
 </summary>
 <value></value>
 <returns>Returns the specified Userlevels.</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ICommand.Enabled">
 <summary>
 Gets a value indicating whether this <see cref="T:Kostal.Testman.Framework.Base.Components.ICommand"/> is enabled.
 </summary>
 <value>
   <c>true</c> if enabled; otherwise, <c>false</c>.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ICommand.Visible">
 <summary>
 Gets a value indicating whether this <see cref="T:Kostal.Testman.Framework.Base.Components.ICommand"/> is visible.
 </summary>
 <value>
   <c>true</c> if visible; otherwise, <c>false</c>.
 </value>
</member>
<member name="M:Kostal.Testman.Framework.Base.Components.ICommand.Invoke">
 <summary>
 Invokes this instance.
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.Components.ICommandsController">
 <summary>
 Interface defintion of the commands controller
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ICommandsController.Items">
 <summary>
 Gets all command items.
 </summary>
 <value>
 The command items.
 </value>
</member>
<member name="T:Kostal.Testman.Framework.Base.Components.ITestApplication">
 <summary>
 Interface for the TestApplication component.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.TestSystems">
 <summary>
 Gets the test systems of the application.
 </summary>
 <value>
 The test systems collection.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.TestSystems(System.Int32)">
 <summary>
 Gets the test system by index.
 </summary>
 <value>
 The test system, if found, otherwise an exception is thrown.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.TestSystems(System.String)">
 <summary>
 Gets the test system by id.
 </summary>
 <value>
 The test system, if found, otherwise an exception is thrown.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.Runtime">
 <summary>
 Gets the runtime.
 </summary>
 <value>
 The runtime.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.State">
 <summary>
 Gets access to the state manager.
 </summary>
 <value>
 The state manager.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.Article">
 <summary>
 Gets the article controller.
 </summary>
 <value>
 The article controller.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.Process">
 <summary>
 Gets the process controller.
 </summary>
 <value>
 The process controller.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.Operation">
 <summary>
 Gets the operation controller.
 </summary>
 <value>
 The operation controller.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.User">
 <summary>
 Gets access to the state manager.
 </summary>
 <value>
 The state manager.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.Counter">
 <summary>
 Gets the application counter controller.
 </summary>
 <value>
 The application counter controller.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.Jobs">
 <summary>
 Gets the jobs controller.
 </summary>
 <value>
 The jobs controller.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.Prompts">
 <summary>
 Gets the prompts controller.
 </summary>
 <value>
 The prompts controller.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.Health">
 <summary>
 Gets the health controller.
 </summary>
 <value>
 The health controller.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.Alarm">
 <summary>
 Gets the alarm controller.
 </summary>
 <value>
 The alarm controller.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.Localizer">
 <summary>
 Gets the localizer.
 </summary>
 <value>
 The localizer.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestApplication.Commands">
 <summary>
 Gets access to the commands controller
 </summary>
 <value>
 The commands controller
 </value>
</member>
<member name="M:Kostal.Testman.Framework.Base.Components.ITestApplication.ShowArticleSelector">
 <summary>
 Shows the article selector.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.Components.ITestApplication.ShowApplicationView(Kostal.Testman.Framework.Base.ApplicationViewType,System.String,System.String)">
 <summary>
 Shows the application view.
 If PageView = Station, StationID and StationViewId could be set, too.
 </summary>
 <param name="pageView">The page view.</param>
 <param name="stationId">The station identifier.</param>
 <param name="stationViewId">The station view identifier.</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestComponent.Id">
 <summary>
 Gets the identifier.
 </summary>
 <value>
 The identifier.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestComponent.Text">
 <summary>
 Gets the text.
 </summary>
 <value>
 The text.
 </value>
</member>
<member name="T:Kostal.Testman.Framework.Base.Components.ITestStation">
 <summary>
 Interface for a TestStation component.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestStation.TestSystem">
 <summary>
 Gets the parent test system.
 </summary>
 <value>
 The test system.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestStation.Runtime">
 <summary>
 Gets the runtime.
 </summary>
 <value>
 The runtime.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestStation.State">
 <summary>
 Gets access to the station state manager.
 </summary>
 <value>
 The station state manager.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestStation.Context">
 <summary>
 The 'Basic Context' allowing access to the concrete context instances.
 </summary>
 <value>
 The context.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestStation.Counter">
 <summary>
 Gets access to the counter controller.
 </summary>
 <value>
 The counter controller.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestStation.Job">
 <summary>
 Gets access to the job controller.
 </summary>
 <value>
 The job controller.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestStation.Runner">
 <summary>
 Gets access to the test runner controller.
 </summary>
 <value>
 The runner controller.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestStation.Prompts">
 <summary>
 Gets access to the messages controller.
 </summary>
 <value>
 The messages controller.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestStation.Health">
 <summary>
 Gets access to the Station Health controller
 </summary>
 <value>
 The Health controller
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestStation.Localizer">
 <summary>
 Gets the localizer.
 </summary>
 <value>
 The localizer.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestStation.Commands">
 <summary>
 Gets access to the commands controller
 </summary>
 <value>
 The commands controller
 </value>
</member>
<member name="T:Kostal.Testman.Framework.Base.Components.ITestSystem">
 <summary>
 Interface for a TestSystem component.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestSystem.TestApplication">
 <summary>
 Gets the parent test application.
 </summary>
 <value>
 The test application.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestSystem.MyStation">
 <summary>
 Gets the home test station.
 </summary>
 <value>
 The home test stations.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestSystem.SubStations">
 <summary>
 Gets the sub stations of the system.
 </summary>
 <value>
 The sub stations collection.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestSystem.SubStations(System.Int32)">
 <summary>
 Gets the sub station by index.
 </summary>
 <value>
 The sub station, if found, otherwise an exception is thrown.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestSystem.SubStations(System.String)">
 <summary>
 Gets the test system by id.
 </summary>
 <value>
 The sub station, if found, otherwise an exception is thrown.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestSystem.Runtime">
 <summary>
 Gets the runtime.
 </summary>
 <value>
 The runtime.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestSystem.State">
 <summary>
 Gets access to the state manager.
 </summary>
 <value>
 The state manager.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Components.ITestSystem.Counter">
 <summary>
 Gets the counter.
 </summary>
 <value>
 The counter.
 </value>
</member>
<member name="T:Kostal.Testman.Framework.Base.IApplicationCounterController">
 <summary>
 Controller to count the successful, failed and ignored test runs and provide some statistical data.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.IApplicationCounterController.Fail">
 <summary>
 Gets the counter counting failed testruns.
 </summary>
 <returns>The counter counting failed testruns as <see cref="T:Kostal.Testman.Framework.Base.ISingleCounter"/></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.IApplicationCounterController.Success">
 <summary>
 Gets the counter counting successful testruns.
 </summary>
 <returns>The counter counting successful testruns as <see cref="T:Kostal.Testman.Framework.Base.ISingleCounter"/></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.IApplicationCounterController.State">
 <summary>
 Gets or sets a value representing the current counter state.
 </summary>
 <value>
 The new state of counter as <see cref="T:Kostal.Testman.Framework.Base.CounterState"/>.
 </value>
 <returns>Current state of counter as <see cref="T:Kostal.Testman.Framework.Base.CounterState"/></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.IApplicationCounterController.Ppm">
 <summary>
 Gets or sets the value indicating the failures in 'Parts per million'.
 </summary>
 <value>
 New ppm value.
 </value>
 <returns>current ppm value</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.IApplicationCounterController.ClearResultIndication">
 <summary>
 Clears the result indication.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.IApplicationCounterController.Reset">
 <summary>
 Resets this instance.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.IApplicationCounterController.Restore(System.String)">
 <summary>
 Restores the counter using specified counter name.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.IApplicationCounterController.Store(System.String)">
 <summary>
 Stores this object using specified counter name.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.IApplicationCounterController.ArticleIndependent">
 <summary>
 Set a fix Countername if this Name is set
 </summary>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.IApplicationCounterController.Enabled">
 <summary>
 Enables the counter
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.ISystemCounterController">
 <summary>
 Controller to count the successful, failed and ignored test runs and provide some statistical data.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ISystemCounterController.Fail">
 <summary>
 Gets the counter counting failed testruns.
 </summary>
 <returns>The counter counting failed testruns as <see cref="T:Kostal.Testman.Framework.Base.ISingleCounter"/></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.ISystemCounterController.Success">
 <summary>
 Gets the counter counting successful testruns.
 </summary>
 <returns>The counter counting successful testruns as <see cref="T:Kostal.Testman.Framework.Base.ISingleCounter"/></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.ISystemCounterController.State">
 <summary>
 Gets or sets a value representing the current counter state.
 </summary>
 <value>
 The new state of counter as <see cref="T:Kostal.Testman.Framework.Base.CounterState"/>.
 </value>
 <returns>Current state of counter as <see cref="T:Kostal.Testman.Framework.Base.CounterState"/></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.ISystemCounterController.Ppm">
 <summary>
 Gets or sets the value indicating the failures in 'Parts per million'.
 </summary>
 <value>
 New ppm value.
 </value>
 <returns>current ppm value</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.ISystemCounterController.ClearResultIndication">
 <summary>
 Clears the result indication.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.ISystemCounterController.Reset">
 <summary>
 Resets this instance.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.ISystemCounterController.Restore(System.String)">
 <summary>
 Restores the counter using specified counter name.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.ISystemCounterController.Store(System.String)">
 <summary>
 Stores this object using specified counter name.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ISystemCounterController.ArticleIndependent">
 <summary>
 Set a fix Countername if this Name is set
 </summary>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ISystemCounterController.Enabled">
 <summary>
 Enables the counter
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.ExecutionEngine.TestStationPerformedEventArgs">
 <summary>
 Provides data for the IExecutionEngineManagerObserver.TestRootPerformed event.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.ExecutionEngine.TestStationPerformedEventArgs.#ctor(Kostal.Testman.Framework.Base.ITestJob,Kostal.Testman.Framework.Base.TestResult)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.ExecutionEngine.TestStationPerformedEventArgs" /> class.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.ExecutionEngine.TestStepPerformedEventArgs.#ctor(Kostal.Testman.Framework.Base.ITestStepResult,System.Boolean)">
 <summary>
 new TStepStatisticEventArgs
 </summary>
 <param name="sStep">TStep containing statistic informations</param>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ExecutionEngine.TestStepPerformedEventArgs.Result">
 <summary>
 Gets a value indicating the result of the completed section
 </summary>
 <returns><c>true</c> if section was executes successfully; otherwise, <c>false</c></returns>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.ExecutionEngine.TestSectionPerformedEventArgs">
 <summary>
 Provides data for the <see cref="E:Kostal.Testman.Framework.Base.IExecutionEngineManagerObserver.TestSectionPerformed"/> event.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.ExecutionEngine.TestSectionPerformedEventArgs.#ctor(Kostal.Testman.Framework.Base.ITestSectionResult,System.String,System.String,System.Int32,System.Boolean)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.ExecutionEngine.TestSectionPerformedEventArgs" /> class.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ExecutionEngine.TestSectionPerformedEventArgs.Result">
 <summary>
 Gets a value indicating the result of the completed section
 </summary>
 <returns><c>true</c> if section was executes successfully; otherwise, <c>false</c></returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ExecutionEngine.TestSectionPerformedEventArgs.TestSectionResult">
 <summary>
 Get the TestSectionResult of the section that was performed
 </summary>
 <returns>The TestSectionResult</returns>
</member>
<member name="T:Kostal.Testman.Framework.Base.ExecutionEngine.TestSectionPerformingEventArgs">
 <summary>
 Provides data for the <see cref="E:Kostal.Testman.Framework.Base.IExecutionEngineManagerObserver.TestSectionPerforming"/> event.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.ExecutionEngine.TestSectionPerformingEventArgs.#ctor(System.String,System.String,System.Int32)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.ExecutionEngine.TestSectionPerformingEventArgs" /> class.
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.ExecutionEngine.TestStepPerformingEventArgs">
 <summary>
   After execution of TestStep the statistics-event will be raised.
   These EventArgs contain all informations to fill Statistics like LQV etc...
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ExecutionEngine.TestStepPerformingEventArgs.#ctor">
 <summary>
 new TStepStatisticEventArgs
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ExecutionEngine.TestStepPerformingEventArgs.#ctor(Kostal.Testman.Framework.Base.ITestStepResult)">
 <summary>
 new TStepStatisticEventArgs
 </summary>
 <param name="singleTestStep">TStep containing statistic informations</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ExecutionEngine.TestStepPerformingEventArgs.#ctor(Kostal.Testman.Framework.Base.ITestStepResult,System.Boolean)">
 <summary>
 new TStepStatisticEventArgs
 </summary>
 <param name="singleTestStep">TStep containing statistic informations</param>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ExecutionEngine.TestStepPerformingEventArgs.Step">
 <summary>
 TStep containing statistic informations
 </summary>
 <value>new TStep</value>
 <returns>actual TStep</returns>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.AlarmChannelType">
 <summary>
 Provides the available alarm channel types.
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.ArticleChangedEventArgs">
 <summary>
 Provides data for the <see cref="E:Kostal.Testman.Framework.Base.SystemState.IArticleState.ArticleChanged"/> event.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleChangedEventArgs.#ctor(Kostal.Testman.Framework.Base.IArticleConfigurationSet)">
 <summary>
 Initializes a new instance of the ArticleChangedEventArgs class with Success property set to true.
 </summary>
 <param name="article">The article that is active now, represented by IArticleConfigurationSet</param>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleChangedEventArgs.Article">
 <summary>
 Gets the value representing the article that is now active.
 </summary>
 <value></value>
 <returns>An ArticleConfigurationSet representing the active article.</returns>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.ArticleChangingEventArgs">
 <summary>
 Provides data for the <see cref="E:Kostal.Testman.Framework.Base.SystemState.IArticleState.ArticleChanging"/> event.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleChangingEventArgs.#ctor(Kostal.Testman.Framework.Base.IArticleConfigurationSet,Kostal.Testman.Framework.Base.IArticleConfigurationSet)">
 <summary>
 Initializes a new instance of ArticleChangingEventArgs with properties CancelPluginReset and Cancel both set to false.
 The currentArticle property is set to nothing and success is set to true.
 </summary>
 <param name="newArticle">IArticleConfigurationSet representing the article that will be active after changing the article.</param>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleChangingEventArgs.Cancel">
 <summary>
 Gets or sets a value indicating whether the event should be canceled.
 </summary>
 <value></value>
 <returns>true if the event should be canceled; otherwise, false.</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleChangingEventArgs.OldArticle">
 <summary>
 Gets the current article that is still active but about to change.
 </summary>
 <value></value>
 <returns>An ArticleConfigurationSet representing the active article.</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleChangingEventArgs.NewArticle">
 <summary>
 Gets the new article that will get active when this event is not canceled. 
 </summary>
 <value></value>
 <returns>An ArticleConfigurationSet representing the new article.</returns>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.ArticleException">
 <summary>
 Represents errors that occured during article selection
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleException.#ctor">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.ArticleException"/>
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleException.#ctor(System.String)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.ArticleException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleException.#ctor(System.String,System.Exception)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.ArticleException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.IArticleProvider">
 <summary>
 Represents an ArticleProvider.
 An ArticleProvider is class that can load articles from a source and provides them within an ArticleCollection 
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.IArticleProvider.GetArticles">
 <summary>
 Gets the available articles in a ArticleCollection.
 </summary>
 <returns>Available articles as ArticleCollection.</returns>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.CaqSetting">
 <summary>
 Settings used when reporting to Caq quality system
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.CaqSetting.#ctor(System.Boolean)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.CaqSetting" /> class.
 Property TestStatus defaults to <c>Normal</c> and Mode is set to <c>End</c>.
 </summary>
 <param name="enabled">if set to <c>true</c> reporting to caq is active.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.CaqSetting.#ctor(System.Boolean,Kostal.Testman.Framework.Base.TesterMode)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.CaqSetting" /> class.
 Property Mode defaults to <c>End</c>.
 </summary>
 <param name="enabled">if set to <c>true</c> reporting to caq is active.</param>
 <param name="mode">The testmode reported to caq system.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.CaqSetting.#ctor(System.Boolean,Kostal.Testman.Framework.Base.TestStatus,Kostal.Testman.Framework.Base.TesterMode)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.CaqSetting" /> class.
 </summary>
 <param name="enabled">if set to <c>true</c> reporting to caq is active.</param>
 <param name="mode">The testmode reported to caq system.</param>
 <param name="status">The status reported to caq system.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.CaqSetting.#ctor(Kostal.Testman.Framework.Base.CaqSetting)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.CaqSetting" /> class.
 </summary>
 <param name="caqSettings">The CaqSettings, where the original values are taken from.</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.CaqSetting.Enabled">
 <summary>
 Gets or sets a value indicating whether this <see cref="T:Kostal.Testman.Framework.Base.CaqSetting" /> is reporting.
 </summary>
 <value>
   <c>true</c> if reporting is enabled; otherwise, <c>false</c>.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.CaqSetting.Status">
 <summary>
 Gets or sets the status reported to caq.
 </summary>
 <value>
 The status reproted to caq.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.CaqSetting.Mode">
 <summary>
 Gets or sets the mode reported to caq.
 </summary>
 <value>
 The mode reported to caq.
 </value>
</member>
<member name="M:Kostal.Testman.Framework.Base.CaqSetting.Equals(System.Object)">
 <summary>
 Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
 </summary>
 <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param><returns>
   <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.CaqSetting.Equals(Kostal.Testman.Framework.Base.CaqSetting)">
 <summary>
 Determines whether the specified <see cref="T:Kostal.Testman.Framework.Base.CaqSetting" /> is equal to this instance.
 </summary>
 <param name="other">The <see cref="T:Kostal.Testman.Framework.Base.CaqSetting" /> to compare with this instance.</param><returns>
   <c>true</c> if the specified <see cref="T:Kostal.Testman.Framework.Base.CaqSetting" /> is equal to this instance; otherwise, <c>false</c>.
 </returns>
</member>
<member name="T:Kostal.Testman.Framework.Base.CounterState">
 <summary>
 Specifies the current state of counter.
 It has either counted a successful or failed run or it's waiting for a result.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.CounterState.NoneOrTesting">
 <summary>
 There is no current state or a test is running
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.CounterState.Ignored">
 <summary>
 The last test run was an ignored one
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.CounterState.Failed">
 <summary>
 The last test run was failed
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.CounterState.Successful">
 <summary>
 The last test run was successful
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.IStationCounterController">
 <summary>
 Controller to count the successful, failed and ignored test runs and provide some statistical data.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.IStationCounterController.Fail">
 <summary>
 Gets the counter counting failed testruns.
 </summary>
 <returns>The counter counting failed testruns as <see cref="T:Kostal.Testman.Framework.Base.ISingleCounter"/></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.IStationCounterController.Success">
 <summary>
 Gets the counter counting successful testruns.
 </summary>
 <returns>The counter counting successful testruns as <see cref="T:Kostal.Testman.Framework.Base.ISingleCounter"/></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.IStationCounterController.Ignored">
 <summary>
 Gets the counter counting ignored testruns.
 </summary>
 <returns>The counter counting ignored testruns as <see cref="T:Kostal.Testman.Framework.Base.ISingleCounter"/></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.IStationCounterController.State">
 <summary>
 Gets or sets a value representing the current counter state.
 </summary>
 <value>
 The new state of counter as <see cref="T:Kostal.Testman.Framework.Base.CounterState"/>.
 </value>
 <returns>Current state of counter as <see cref="T:Kostal.Testman.Framework.Base.CounterState"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.IStationCounterController.ClearResultIndication">
 <summary>
 Clears the result indication.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.IStationCounterController.Reset">
 <summary>
 Resets this instance.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.IStationCounterController.Enabled">
 <summary>
 Enables the counter
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.ISingleCounter">
 <summary>
 Simple counter that manages an integer value on provides events when value changes
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ISingleCounter.Value">
 <summary>
 Gets or sets the value representing the count.
 </summary>
 <value>
 The new counter value.
 </value>
 <returns>The current counter value.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.ISingleCounter.Reset">
 <summary>
 Resets this counter instance.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.ISingleCounter.SetValue(System.Int32)">
 <summary>
 Sets the value of this counter instance.
 </summary>
 <param name="value">The new value.</param>
</member>
<member name="T:Kostal.Testman.Framework.Base.Hardware.IHardwareChannelInformation">
 <summary>
 Informations about a hardware channel.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.Hardware.IHardwareChannelInformation.TypeName">
 <summary>
 Gets the name of the type.
 </summary>
 <value>
 The name of the type.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Hardware.IHardwareChannelInformation.PhysicalName">
 <summary>
 Gets the physical name of the channel, also called root name.
 </summary>
 <value>
 The name of the channel.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Hardware.IHardwareChannelInformation.HardwareName">
 <summary>
 Gets the application-wide renamed name of the channel.
 </summary>
 <value>
 The name of the channel.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Hardware.IHardwareChannelInformation.SpecificName">
 <summary>
 Gets the station-specific renamed name of the channel.
 </summary>
 <value>
 The name of the channel.
 </value>
</member>
<member name="T:Kostal.Testman.Framework.Base.Hardware.IHardwareInformer">
 <summary>
 Informations about the used hardware.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.Hardware.IHardwareInformer.GetHardwareChannelsInformations">
 <summary>
 Gets the hardware channels informations.
 </summary>
 <returns></returns>
</member>
<member name="T:Kostal.Testman.Framework.Base.Health.IApplicationHealthController">
 <summary>
 Interface defintion of the application health controller
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.Health.IApplicationHealthController.Items">
 <summary>
 Gets all health items.
 </summary>
 <value>
 The health items.
 </value>
</member>
<member name="T:Kostal.Testman.Framework.Base.Health.IHealthController">
 <summary>
 Interface defintion of functionality to add health items
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.Health.IHealthController.AddItem(System.String,Kostal.Testman.Plugin.Base.Health.HealthStates,System.String,System.String,System.Boolean)">
 <summary>
 Adds a health item.
 </summary>
 <param name="id">The identifier.</param>
 <param name="state">The state.</param>
 <param name="labelText">The label text.</param>
 <param name="valueText">The value text.</param>
 <param name="visibleAtStart">Indicates, that this health item should also be visible, if there is no warning/problem.</param>
 <returns></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Health.IHealthController.AddItem(System.String,Kostal.Testman.Plugin.Base.Health.HealthStates,System.String,System.String,System.Boolean,System.Action,System.Int32)">
 <summary>
 Adds a health item.
 </summary>
 <param name="id">The identifier.</param>
 <param name="state">The state.</param>
 <param name="labelText">The label text.</param>
 <param name="valueText">The value text.</param>
 <param name="visibleAtStart">Indicates, that this health item should also be visible, if there is no warning/problem state.</param>
 <param name="actionTick">The action to invoke, if the interval is fullfilled.</param>
 <param name="tickInterval">The interval for tick.</param>
 <returns></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Health.IHealthController.AddItem(Kostal.Testman.Plugin.Base.Health.IHealthItem)">
 <summary>
 Adds a health item.
 </summary>
 <param name="itemHealth">The health item to add.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.Health.IHealthController.AddItem(Kostal.Testman.Plugin.Base.Health.IHealthItem,System.Boolean)">
 <summary>
 Adds a health item.
 </summary>
 <param name="itemHealth">The health item to add.</param>
 <param name="visibleAtStart">Indicates, that this health item should also be visible, if there is no warning/problem state.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.Health.IHealthController.AddItem(Kostal.Testman.Plugin.Base.Health.IHealthItem,System.Boolean,System.Int32)">
 <summary>
 Adds a health item.
 </summary>
 <param name="itemHealth">The health item to add.</param>
 <param name="visibleAtStart">Indicates, that this health item should also be visible, if there is no warning/problem state.</param>
 <param name="tickInterval">The interval for tick.</param>
</member>
<member name="T:Kostal.Testman.Framework.Base.Health.IStationHealthController">
 <summary>
 Interface defintion of the station health controller
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.Health.IStationHealthController.Items">
 <summary>
 Gets all health items.
 </summary>
 <value>
 The health items.
 </value>
</member>
<member name="T:Kostal.Testman.Framework.Base.IOperationMode">
 <summary>
 Interface definition for an operation mode
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.IOperationMode.Id">
 <summary>
 Gets the identifier.
 </summary>
 <value>
 The identifier.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.IOperationMode.Text">
 <summary>
 Gets the text.
 </summary>
 <value>
 The text.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.IOperationMode.UserLevel">
 <summary>
 Gets the specified user levels for this operation mode.
 </summary>
 <value></value>
 <returns>The specified user levels.</returns>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.IOperationManager">
 <summary>
 Basic interface for an operation modes manager.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.IOperationManager.GetOperations">
 <summary>
 Gets all available OperationModes.
 </summary>
 <returns>All available OperationModes as <see cref="T:System.Collections.Generic.IEnumerable`1"/></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.IOperationManager.Selected">
 <summary>
 Gets the current, active OperationMode.
 </summary>
<returns>The active OperationMode as <see cref="T:Kostal.Testman.Framework.Base.IOperationMode"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.IOperationManager.Select(System.String)">
 <summary>
 Changes the current OperationMode.
 </summary>
 <param name="id">Id of OperationMode to activate.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.IOperationManager.Select(Kostal.Testman.Framework.Base.IOperationMode)">
 <summary>
 Changes the current OperationMode.
 </summary>
 <param name="operationMode"><see cref="T:Kostal.Testman.Framework.Base.IOperationMode"/> to activate.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.IOperationController.GetOperations">
 <summary>
 List of all operation mode items currently registered.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.IOperationController.Selected">
 <summary>
 Gets the current selected operation mode.
 </summary>
 <value>
 The current selected operation mode.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.IOperationController.SelectedId">
 <summary>
 Gets the id of the current selected operation mode.
 </summary>
 <value>
 The id of the current selected operation mode.
 </value>
</member>
<member name="M:Kostal.Testman.Framework.Base.IOperationController.Add(System.String,System.String)">
 <summary>
 Creates a new processitem and adds it to list of available processes
 </summary>
 <param name="id">Id of operation mode to be created</param>
 <returns>The new processItem</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.IOperationController.Add(System.String,System.String,Kostal.Testman.Framework.Base.UserLevel)">
 <summary>
 Creates a new processitem and adds it to list of available processes
 </summary>
 <param name="id">Id of operation mode to be created</param>
 <param name="userLevel">userlevels allowed to activate this operation mode</param>
 <returns>The new processItem</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.IOperationController.Select(Kostal.Testman.Framework.Base.IOperationMode)">
 <summary>
 Activates the provided operation mode and causes Testman framework to start changing the operation mode.
 </summary>
 <param name="operationMode">operation mode item to be activated</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.IOperationController.Select(System.String)">
 <summary>
 Activates the operation mode with the provided id and causes Testman framework to start changing the operation mode.
 </summary>
 <param name="id">id of the operation mode to be activated</param>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.OperationEventArgs">
 <summary>
 Provides data for the <see cref="E:Kostal.Testman.Framework.Base.SystemState.IProcessState.ProcessChanged"/> and <see cref="E:Kostal.Testman.Framework.Base.SystemState.IProcessState.ProcessChanging"/> events.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.OperationEventArgs.#ctor(Kostal.Testman.Framework.Base.IOperationMode)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.ProcessEventArgs" /> class.
 The Cancel property is initialized with <c>false</c>.
 </summary>
 <param name="modeOperation">The process that is getting active.</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.OperationEventArgs.OperationMode">
 <summary>
 Gets or sets the <see cref="T:Kostal.Testman.Framework.Base.IProcessItem" /> that is getting active.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.OperationChangingEventArgs.#ctor(Kostal.Testman.Framework.Base.IOperationMode,Kostal.Testman.Framework.Base.IOperationMode)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.OperationEventArgs" /> class.
 The Cancel property is initialized with <c>false</c>.
 </summary>
 <param name="operationModeOld">The operation mode that is currently active.</param>
 <param name="operationModeNew">The operation mode that is getting active.</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.OperationChangingEventArgs.OperationModeOld">
 <summary>
 Gets the <see cref="T:Kostal.Testman.Framework.Base.IOperationMode" /> that is currently active.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.OperationChangingEventArgs.OperationModeNew">
 <summary>
 Gets the <see cref="T:Kostal.Testman.Framework.Base.IOperationMode" /> that is getting active.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.OperationChangingEventArgs.Cancel">
 <summary>
 Gets or sets a value indicating whether this <see cref="T:Kostal.Testman.Framework.Base.OperationEventArgs" /> is canceled.
 </summary>
 <value>
   <c>true</c> if cancel; otherwise, <c>false</c>.
 </value>
</member>
<member name="M:Kostal.Testman.Framework.Base.OperationException.#ctor">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.OperationException"/>
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.OperationException.#ctor(System.String)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.OperationException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.OperationException.#ctor(System.String,System.Exception)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.OperationException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ProcessException.#ctor">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.ProcessException"/>
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ProcessException.#ctor(System.String)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.ProcessException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ProcessException.#ctor(System.String,System.Exception)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.ProcessException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.Prompts.DisplayOptions">
 <summary>
 Display options for the prompt
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Prompts.DisplayOptions.None">
 <summary>
 The are no special display options
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Prompts.DisplayOptions.WithBeep">
 <summary>
 The prompt does a windows beep, if set fresh
 </summary>
 <remarks></remarks>
</member>
<member name="F:Kostal.Testman.Framework.Base.Prompts.DisplayOptions.Local">
 <summary>
 The prompt is only indicated at the station
 </summary>
 <remarks>
 UserRepsones are not allowed to add
 </remarks>
</member>
<member name="F:Kostal.Testman.Framework.Base.Prompts.DisplayOptions.Input">
 <summary>
 The prompt asks for an input
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.Prompts.IPrompt">
 <summary>
 Interface for user prompt
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.Prompts.IPrompt.TypeOfPrompt">
 <summary>
 Gets the type of the prompt.
 </summary>
 <value>
 The type of the prompt.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Prompts.IPrompt.DisplayOption">
 <summary>
 Gets the display options.
 </summary>
 <value>
 The display options.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Prompts.IPrompt.Raised">
 <summary>
 Gets the datetime of creation.
 </summary>
 <value>
 The datetime of creation.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Prompts.IPrompt.StationText">
 <summary>
 Gets the station text.
 </summary>
 <value>
 The station text.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Prompts.IPrompt.PromptText">
 <summary>
 Gets the prompt text.
 </summary>
 <value>
 The prompt text.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Prompts.IPrompt.PossibleResponses">
 <summary>
 Gets the possible responses.
 </summary>
 <value>
 The possible responses.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Prompts.IPrompt.DigitalOutputChannelIds">
 <summary>
 Gets the digital output channel ids.
 </summary>
 <value>
 The digital output channel ids.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Prompts.IPrompt.BlinkTimeOn">
 <summary>
 Gets the time in milliseconds for the on state in blink Mode.
 </summary>
 <value>
 The time for on in blink mode.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Prompts.IPrompt.BlinkTimeOff">
 <summary>
 Gets the time in milliseconds for the off state in blink Mode.
 </summary>
 <value>
 The time for off in blink mode.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Prompts.IPrompt.ResponseId">
 <summary>
 Gets the id of the response.
 </summary>
 <value>
 The response id.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.Prompts.IPrompt.IsTimedOut">
 <summary>
 Gets <c>True</c> if a time out occur when wait for the response.
 </summary>
 <value>
 The boolean value if the time out occur
 </value>
</member>
<member name="M:Kostal.Testman.Framework.Base.Prompts.IPrompt.SetResponse(System.String)">
 <summary>
 Sets the response id for this prompt.
 </summary>
 <param name="responseId">The response id.</param>
 <returns>True, if succesful otherwise false</returns>
 <remarks>Can only be called once, until the repsonse is cleared.</remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.Prompts.IPrompt.ClearResponse">
 <summary>
 Clears the response id for this prompt.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.Prompts.IPrompt.WaitForResponse(System.Int32,System.Boolean)">
 <summary>
 Waits for response on this prompt for a maximum time (in milliseconds).
 Blocks the current thread until the response or the timeout occur.
 </summary>
 <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely. </param>
 <param name="clearMessageWhenTimedOut">If set to <c>true</c> the message is cleared after the timeout occur.</param>
 <returns>
 The id of the reponse
 </returns>
</member>
<member name="T:Kostal.Testman.Framework.Base.Prompts.PromptTypes">
 <summary>
 Types of prompt
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Prompts.PromptTypes.None">
 <summary>
 No special type
 </summary>
 <remarks></remarks>
</member>
<member name="F:Kostal.Testman.Framework.Base.Prompts.PromptTypes.Alarm">
 <summary>
 The prompt indicates an alarm
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Prompts.PromptTypes.Problem">
 <summary>
 The prompt indicates a problem
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Prompts.PromptTypes.Warning">
 <summary>
 The prompt indicates a warning
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Prompts.PromptTypes.Information">
 <summary>
 The prompt indicates an information
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Prompts.PromptTypes.Question">
 <summary>
 The prompt indicates a question
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.Prompts.UserResponse">
 <summary>
 Class for user responses used by prompts
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.Prompts.UserResponse.#ctor(System.String,System.String)">
 <summary>
 Create a new UserResponse
 </summary>
 <param name="id">The identifier of the User Response</param>
 <param name="text">The shown text of the UserResponse</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.Prompts.UserResponse.#ctor(System.String,System.String,System.String)">
 <summary>
 Create a new UserResponse
 </summary>
 <param name="id">The identifier of the User Response</param>
 <param name="text">The shown text of the UserResponse</param>
 <param name="channelId">The name of the (digital input) channel. It is also possible to add more channels names separated by a comma.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.Prompts.UserResponse.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 Create a new UserResponse
 </summary>
 <param name="id">The identifier of the User Response</param>
 <param name="text">The shown text of the UserResponse</param>
 <param name="channelIds">The list of names of the (digital input) channel(s).</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.Prompts.UserResponse.Id">
 <summary>
 The identifier of the user response
 </summary>
 <returns>The identifier</returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.Prompts.UserResponse.Text">
 <summary>
 The shown text of the user response.
 </summary>
 <returns>The text, if empty the id is returned.</returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.Prompts.UserResponse.ChannelIds">
 <summary>
 The list of the channels names
 </summary>
 <returns>A string array with the names of the channels.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Prompts.UserResponse.ToString">
 <summary>Returns a string that represents the current object.</summary>
 <returns>A string that represents the current object.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.IProcessController.GetProcesses">
 <summary>
 List of all process items currently registered.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.IProcessController.Selected">
 <summary>
 Gets the current selected process.
 </summary>
 <value>
 The current selected process.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.IProcessController.SelectedId">
 <summary>
 Gets the id of the selected process.
 </summary>
 <value>
 The id of the selected process.
 </value>
</member>
<member name="M:Kostal.Testman.Framework.Base.IProcessController.Add(System.String,System.Boolean)">
 <summary>
 Creates a new processitem and adds it to list of available processes
 </summary>
 <param name="id">Id of process to be created</param>
 <returns>The new processItem</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.IProcessController.Add(System.String,Kostal.Testman.Framework.Base.UserLevel)">
 <summary>
 Creates a new processitem and adds it to list of available processes
 </summary>
 <param name="id">Id of process to be created</param>
 <param name="userLevel">userlevels allowed to activate this process</param>
 <returns>The new processItem</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.IProcessController.Add(System.String,Kostal.Testman.Framework.Base.UserLevel,Kostal.Testman.Framework.Base.CaqSetting)">
 <summary>
 Creates a new processitem and adds it to list of available processes
 </summary>
 <param name="id">Id of process to be created</param>
 <param name="userLevel">userlevels allowed to activate this process</param>
 <param name="caqSetting">caqsettings for new process</param>
 <returns>The new processItem</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.IProcessController.Add(System.String,Kostal.Testman.Framework.Base.UserLevel,Kostal.Testman.Framework.Base.TesterMode,System.Boolean)">
 <summary>
 Creates a new processitem and adds it to list of available processes
 </summary>
 <param name="id">Id of process to be created</param>
 <param name="userLevel">userlevels allowed to activate this process</param>
 <param name="CaqMode">Sets the mode that is reported when result is transferred to CAQ system</param>
 <param name="caqEnable">Enables/Disables CAQ reporting</param>
 <returns>The new processItem</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.IProcessController.Add(System.String,Kostal.Testman.Framework.Base.UserLevel,System.Boolean)">
 <summary>
 Creates a new processitem and adds it to list of available processes
 If Caq is enabled working-mode is 'Normal'.
 </summary>
 <param name="id">Id of process to be created</param>
 <param name="userLevel">userlevels allowed to activate this process</param>
 <param name="caqEnable">Enables/Disables CAQ reporting</param>
 <returns>The new processItem</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.IProcessController.Select(Kostal.Testman.Framework.Base.IProcessItem)">
 <summary>
 Activates the provided process and causes Testman framework to start changing the process.
 </summary>
 <param name="processItem">process item to be activated</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.IProcessController.Select(System.String)">
 <summary>
 Activates the process with the provided id and causes Testman framework to start changing the process.
 </summary>
 <param name="processId">id of the process to be activated</param>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.IProcessItem">
 <summary>
 Interface definition for a process
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.IProcessItem.Id">
 <summary>
 Gets the identifier.
 </summary>
 <value>
 The identifier.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.IProcessItem.UserLevel">
 <summary>
 Gets the specified Userlevels for this process.
 </summary>
 <value></value>
 <returns>returns the specified Userlevels.</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.IProcessItem.CaqSetting">
 <summary>
 Gets the caq setting.
 </summary>
 <value>
 The caq setting.
 </value>
</member>
<member name="M:Kostal.Testman.Framework.Base.ProcessChangingEventArgs.#ctor(Kostal.Testman.Framework.Base.IProcessItem,Kostal.Testman.Framework.Base.IProcessItem)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.ProcessEventArgs" /> class.
 The Cancel property is initialized with <c>false</c>.
 </summary>
 <param name="processOld">The process that is currently active.</param>
 <param name="processNew">The process that is getting active.</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.ProcessChangingEventArgs.ProcessOld">
 <summary>
 Gets the <see cref="T:Kostal.Testman.Framework.Base.IProcessItem" /> that is currently
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ProcessChangingEventArgs.ProcessNew">
 <summary>
 Gets the <see cref="T:Kostal.Testman.Framework.Base.IProcessItem" /> that is getting active.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ProcessChangingEventArgs.Cancel">
 <summary>
 Gets or sets a value indicating whether this <see cref="T:Kostal.Testman.Framework.Base.ProcessEventArgs" /> is canceled.
 </summary>
 <value>
   <c>true</c> if cancel; otherwise, <c>false</c>.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.IApplicationJobsController.MaximumJobs">
 <summary>
 Maximum amount of historic runnables that holds the jobcontroller
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.IJobsController">
 <summary>
 JobController of a station. 
 It is registered in the runtime of a station
 </summary>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.IJobsController.Items">
 <summary>
 The historic runnables of the jobs of the depending station
 </summary>
 <remarks>The last runnable is at the end of the list</remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.IApplicationExtension">
 <summary>
 Interface for Module. A module is a application-wide component for testman.
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.ISystemRuntimeManager">
 <summary>
 The runtime manager to fetch runtime instances of classes
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.ISystemRuntimeManager.Resolve``1">
 <summary>
 Register and Resolves a certain class or interface from or to runtime container.
 </summary>
 <typeparam name="T"></typeparam><returns></returns>
</member>
<member name="T:Kostal.Testman.Framework.Base.IJobController">
 <summary>
 JobController of a station. 
 It is registered in the runtime of a station
 </summary>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.IJobController.JobAttached">
 <summary>
 Occurs when job is attached to a station.
 </summary>
</member>
<member name="E:Kostal.Testman.Framework.Base.IJobController.JobDetached">
 <summary>
 Occurs when job is detached from a station.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.IJobController.Current">
 <summary>
 The current job that is held by the Jobcontroller
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.IJobController.MaximumStationResults">
 <summary>
 Maximum amount of historic TestStationResult that is held by the jobcontroller
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.IJobController.StationResults">
 <summary>
 The historic TestStationResult of the jobs of the depending station
 </summary>
 <remarks>The last ITestStationResult is at the end of the list</remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.IApplicationRuntimeManager">
 <summary>
 The runtime manager to fetch runtime instances of classes
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.IApplicationRuntimeManager.Resolve``1">
 <summary>
 Register and Resolves a certain class or interface from or to runtime container.
 </summary>
 <typeparam name="T"></typeparam><returns></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.IApplicationRuntimeManager.Resolve(System.Type)">
 <summary>
 Register and Resolves a certain class or interface from or to runtime container.
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.IStationRuntimeManager">
 <summary>
 The runtime manager to fetch runtime instances of classes
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.IStationRuntimeManager.Resolve``1">
 <summary>
 Register and Resolves a certain class or interface from or to runtime container.
 </summary>
 <typeparam name="T"></typeparam><returns></returns>
</member>
<member name="T:Kostal.Testman.Framework.Base.Shutdown.CloseReason">
 <summary>
 Specifies the reason that a form was closed.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Shutdown.CloseReason.None">
 <summary>
 The cause of the closure was not defined or could not be determined.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Shutdown.CloseReason.WindowsShutDown">
 <summary>
 The operating system is closing all applications before shutting down.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Shutdown.CloseReason.MdiFormClosing">
 <summary>
 The parent form of this multiple document interface (MDI) form is closing.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Shutdown.CloseReason.UserClosing">
 <summary>
 The user is closing the form through the user interface (UI), for example
 by clicking the Close button on the form window, selecting Close from the
 window's control menu, or pressing ALT+F4.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Shutdown.CloseReason.TaskManagerClosing">
 <summary>
 The Microsoft Windows Task Manager is closing the application.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Shutdown.CloseReason.FormOwnerClosing">
 <summary>
 The owner form is closing.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Shutdown.CloseReason.ApplicationExitCall">
 <summary>
 The Application.Exit() method were called
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.Shutdown.ClosingEventArgs.CloseReasons">
 <summary>
 Specifies the reason that a form was closed.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Shutdown.ClosingEventArgs.CloseReasons.None">
 <summary>
 The cause of the closure was not defined or could not be determined.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Shutdown.ClosingEventArgs.CloseReasons.WindowsShutDown">
 <summary>
 The operating system is closing all applications before shutting down.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Shutdown.ClosingEventArgs.CloseReasons.MdiFormClosing">
 <summary>
 The parent form of this multiple document interface (MDI) form is closing.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Shutdown.ClosingEventArgs.CloseReasons.UserClosing">
 <summary>
 The user is closing the form through the user interface (UI), for example
 by clicking the Close button on the form window, selecting Close from the
 window's control menu, or pressing ALT+F4.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Shutdown.ClosingEventArgs.CloseReasons.TaskManagerClosing">
 <summary>
 The Microsoft Windows Task Manager is closing the application.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Shutdown.ClosingEventArgs.CloseReasons.FormOwnerClosing">
 <summary>
 The owner form is closing.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.Shutdown.ClosingEventArgs.CloseReasons.ApplicationExitCall">
 <summary>
 The Application.Exit() method were called
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.Shutdown.IShutdownController">
 <summary>
 The interface for the Shutdown controller.
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.ISystemStateManager">
 <summary>
 the state machine maintaining the current system state.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.ISystemStateManager.SystemStates">
 <summary>
 The system states.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.StableStates.Down">
 <summary>
 The component is not initialized or has been shut down
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.StableStates.Off">
 <summary>
 The component is off
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.StableStates.On">
 <summary>
 The component is on
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.StableStates.Run">
 <summary>
 The component is running
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.StableStates.Test">
 <summary>
 The component is testing
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TurnableStates.Off">
 <summary>
 The component should be off
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TurnableStates.On">
 <summary>
 The component shoulld be on
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TurnableStates.Run">
 <summary>
 The component should be running
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.Logging">
 <summary>
 Initializes Nlog logging engine for the framework.
 <remarks>
 </remarks>
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.Logging.Setup">
 <summary>
 Initializes a new instance of the class.
 </summary>
 <remarks>Could be called several times, only the firstg call do something</remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.Utils">
 <summary>
 Provides extension methods to do validation and conversion
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.IsByteArray(System.String)">
 <summary>
 Determines whether the inserted value is a <see cref="T:System.Byte"/> where either a whitespace or a hyphen is used as seperator char.
 </summary>
 <param name="value">The value to be checked.</param>
 <returns>
   <c>true</c> if value is byte array; otherwise, <c>false</c>.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.IsByteArrayWhitespaceSeperated(System.String)">
 <summary>
 Determines whether the inserted value is a <see cref="T:System.Byte"/> where a whitespace is used as seperator char.
 </summary>
 <param name="value">The value to be checked.</param>
 <returns>
   <c>true</c> if value is byte array; otherwise, <c>false</c>.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.IsByteArrayHyphenSeperated(System.String)">
 <summary>
 Determines whether the inserted value is a <see cref="T:System.Byte"/> where a hyphen is used as seperator char.
 </summary>
 <param name="value">The value to be checked.</param>
 <returns>
   <c>true</c> if value is byte array; otherwise, <c>false</c>.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.IsLinkSyntax(System.String)">
 <summary>
 Determines whether value is in link syntax.
 </summary>
 <param name="value">The value to be checked.</param><returns>
   <c>true</c> if value is in link syntax; otherwise, <c>false</c>.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.FindExistingFileInTestmanFileStructure(System.String)">
 <summary>
 Searches for an existing file within testman filestructure
 </summary>
 <param name="relativPath">Filename and relativ path of the file to be searched.</param>
 <returns>The absolut path</returns>
 <exception cref="T:System.IO.FileNotFoundException">In case the file is not existing.</exception>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.TryFindExistingFileInTestmanFileStructure(System.String,System.String@)">
 <summary>
 Searches for an existing file within testman filestructure
 </summary>
 <param name="relativPath">>Filename and relativ path of the file to be searched.</param>
 <param name="absolutePath">The absolut path</param>
 <returns>True if the file exists, otherwise False</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.CreatePathRelativeToTestmanFileStructure(System.String)">
 <summary>
 Tries to make an absolut path relative to testman file structure.
 this only works if the provided path is within the testman base directory. Otherwise the absolut path is returned
 </summary>
 <param name="value">Filename and absolut path to be transformed.</param>
 <returns>the relative path if possible, otherwise the inserted path.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.FitToTestmanFileStructure(System.String)">
 <summary>
 Updates the insereted relativ path and makes it absolut to testman filestructure.
 </summary>
 <param name="value">Filename and/or relativ path to be fit.</param>
 <returns>the absolut path without any existence checks.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.FitToTestmanFileStructure(System.String,System.String)">
 <summary>
 Updates the insereted relativ path and makes it absolut to testman filestructure.
 </summary>
 <param name="value">Filename and/or relativ path to be fit.</param>
 <returns>the absolut path without any existence checks.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.GetLinebreakedTooltip(System.String)">
 <summary>
 Automatially linebreaks a text to generate a multiline text.
 Max blocklength is set fixed to 80. 
 </summary>
 <param name="theText">The string to be transformed into multiline string.</param>
 <returns>The inserted string as multiline string.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.GetLinebreakedTooltip(System.String,System.Int32)">
 <summary>
 Automatially linebreaks a text to generate a multiline text.
 Max blocklength is <paramref name="maxLength"/>. 
 </summary>
 <param name="theText">The string to be transformed into multiline string.</param>
 <param name="maxLength">max length of a single line.</param>
 <returns>The inserted string as multiline string.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.GetQuotedValue(System.String)">
 <summary>
 Quote a value
 </summary>
 <param name="value"></param>
 <returns>Empty or  "+value+")</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.GetEscapedValue(System.String)">
 <summary>
 Escape a Value
 </summary>
 <param name="value"></param>
 <returns>RegexFlowFileEscaping.Replace(value, RegexFlowFileStepLineEscapingReplace)</returns>
 <remarks>" or ; must by replaced</remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.GetReEscapedValue(System.String)">
 <summary>
 ReEscape a Value
 </summary>
 <param name="value"></param>
 <returns>nothing or RegexFlowFileReEscaping.Replace(value, RegexFlowFileStepLineReEscapingReplace)</returns>
 <remarks>alle @%"%@ wieder zurück in " ersetzen</remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.GetEscapedAndQuotedValue(System.String)">
 <summary>
 Escape And Quote a value
 </summary>
 <param name="value"></param>
 <returns>nothing or value.EscapeValue().QuoteValue()</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.Utils.ToStringSupportingNothing(System.String)">
 <summary>
 supports ToString if Object is nothing
 </summary>
 <param name="message"></param>
 <returns>message or ""nothing""</returns>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.SystemState.IOperationState.OperationChanging">
 <summary>
 Occures when operation mode manager is changing the operation mode.
 This operation can still be aborted.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.SystemState.IOperationState.OperationChanged">
 <summary>
 Occures after the operation mode manager has changed the operation mode.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.SystemState.IOperationState.GetOperations">
 <summary>
 Gets the available operation modes.
 </summary>
 <returns></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.SystemState.IOperationState.Selected">
 <summary>
 Gets the selected operation mode.
 </summary>
 <value>
 The selected operation mode.
 </value>
</member>
<member name="E:Kostal.Testman.Framework.Base.SystemState.OperationState.OperationChanging">
 <summary>
 Occures when operation mode manager is changing the operation mode.
 This operation can still be aborted.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.SystemState.OperationState.OperationChanged">
 <summary>
 Occures after the operation mode manager has changed the operation mode.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.SystemState.IArticleState.ArticleChanging">
 <summary>
 Occures if the article is about to change.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.SystemState.IArticleState.ArticleChanged">
 <summary>
 Occures if the article has changed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.SystemState.IArticleState.Selected">
 <summary>
 Gets a value representing the currently selected article.
 </summary>
 <value></value>
 <returns>Currently selected article as ArticleConfigurationSet</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.SystemState.IArticleState.SelectedId">
 <summary>
 Gets the id of the currently selected article.
 </summary>
 <value></value>
 <returns>The id of the currently selected article.</returns>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.SystemState.IProcessState.ProcessChanging">
 <summary>
 Occures when process manager is changing the process.
 This operation can still be aborted.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.SystemState.IProcessState.ProcessChanged">
 <summary>
 Occures after the process manager has changed the process.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.SystemState.IProcessState.GetProcesses">
 <summary>
 Gets the available processes.
 </summary>
 <returns></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.SystemState.IProcessState.Selected">
 <summary>
 Gets the selected process.
 </summary>
 <value>
 The selected process.
 </value>
</member>
<member name="E:Kostal.Testman.Framework.Base.SystemState.ProcessState.ProcessChanging">
 <summary>
 Occures when process manager is changing the process.
 This operation can still be aborted.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.SystemState.ProcessState.ProcessChanged">
 <summary>
 Occures after the process manager has changed the process.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.IExecutionContainer.Paused">
 <summary>
 Get or set the paused value.
 If set to <c>True</c> the execution of steps is paused
 </summary>
 <returns></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.IExecutionContainer.Aborted">
 <summary>
 Get or set the aborted value
 If set to <c>True</c> the execution of steps was aborted by the user of a action step
 </summary>
 <returns></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.IExecutionContainer.PauseExecutionIfNeccesary">
 <summary>
 Loops in a Sleep as long as the Paused property is set
 </summary>
</member>
<member name="E:Kostal.Testman.Framework.Base.IRunnerController.JobStarted">
 <summary>
 Occurs when a test job has been started.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.AbortReasons">
 <summary>
 Defines the reasons for aborting a step/sequence
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.AbortReasons.None">
 <summary>
 No reaeon (normally: was not aborted)
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.AbortReasons.Abort">
 <summary>
 Aborted by Abort-button
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.AbortReasons.Reset">
 <summary>
 Aborted by Reset-button
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.AbortReasons.Alarm">
 <summary>
 Aborted by Alarm
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.AbortReasons.Stop">
 <summary>
 Aborted by Debugger
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.IExternalIdController">
 <summary>
 Provides methods to generate and validate teststep numbers
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.IExternalIdController.GetNewExternalId(Kostal.Testman.Framework.Base.ITestSectionDefinition,System.Int32)">
 <summary>
 Gets a new external identifier.
 </summary>
 <param name="sectionDefinition">The section definition, the new TestStep belongs to.</param>
 <param name="index">The index where the new TestStep will be inserted.</param>
 <returns>A new valid value for the external id.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.IExternalIdController.ValidateExternalId(Kostal.Testman.Framework.Base.ITestStepDefinition,System.String)">
 <summary>
 Validates the external identifier, if a change in the external identifier is required.
 </summary>
 <param name="stepDef">The TestStep definition, where the changed external id is part of.</param>
 <param name="externalId">The changed external identifier.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.IExternalIdController.ValidateFileDefinition(Kostal.Testman.Framework.Base.ITestFileDefinition)">
 <summary>
 Validates the file definition in focus of external identifiers.
 </summary>
 <param name="fileDefinition">The file definition to be checked.</param>
 <remarks>Errors are raised via Exceptions. This function is mostly used, if the TestFileDefinition will be saved.</remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.IExternalIdController.ModifyExternalIdWhenStepPerforming(Kostal.Testman.Framework.Base.ITestStepPerform)">
 <summary>
 Modifies the external identifier when the TestStep starts performing.
 </summary>
 <param name="stepRunnable">The runnable TestStep.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.IExternalIdController.ModifyExternalIdWhenStepPerformed(Kostal.Testman.Framework.Base.ITestStepPerform)">
 <summary>
 Modifies the external identifier when the TestStep was performed.
 </summary>
 <param name="stepRunnable">The runnable TestStep.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.IExternalIdController.ModifyExternalIdWhenTestPerforming(Kostal.Testman.Framework.Base.ITestJobResult)">
 <summary>
 Modifies the external identifiers when the Test starts performing.
 </summary>
 <param name="systemResult">The runnable Test.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.IExternalIdController.ModifyExternalIdWhenTestPerformed(Kostal.Testman.Framework.Base.ITestJobResult)">
 <summary>
 Modifies the external identifiers when the Test was performed.
 </summary>
 <param name="systemResult">The runnable Test.</param>
</member>
<member name="T:Kostal.Testman.Framework.Base.ITestJobResult.PredefinedAttributeKeys">
 <summary>
 Predefined akeys for attributes
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.ITestJobResult.PredefinedAttributeKeys.SerialNumber">
 <summary>
 The serial number
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.ITestJobResult.PredefinedAttributeKeys.CarrierNumber">
 <summary>
 The carrier number
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.ITestJobResult.PredefinedAttributeKeys.ExternalNumber">
 <summary>
 An external number
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJobResult.StationResults">
 <summary>
 Gets all station results, excluding multiple execution of one station.
 </summary>
 <value>
 The station results.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJobResult.AllStationResults">
 <summary>
 Gets all station results, including multiple execution of one station.
 </summary>
 <value>
 All station results.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJobResult.Ok">
 <summary>
 Gets the final result of this job,if it is ok.
 </summary>
 <value>
   <c>true</c> if ok; otherwise, <c>false</c>.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJobResult.Completed">
 <summary>
 Gets the datetime of completion/closing this job result.
 </summary>
 <value>
 The datetime of completion/closing.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJobResult.IsClosed">
 <summary>
 Gets a value indicating whether this job result is closed.
 </summary>
 <value>
   <c>true</c> if this instance is closed; otherwise, <c>false</c>.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJobResult.Attributes">
 <summary>
 Gets the attributes.
 </summary>
 <value>
 The attributes.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestSectionDefinition.FileDefinition">
 <summary>
 Gets the file definition.
 </summary>
 <value>
 The file definition.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestSectionDefinition.CountOfTeststeps">
 <summary>
 Returns the number of teststeps within this container.
 </summary>
 <value></value>
 <returns>number of teststeps</returns>
</member>
<member name="T:Kostal.Testman.Framework.Base.ITestSectionResult">
 <summary>
 Interface defintion for test result at section level
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestSectionResult.Id">
 <summary>
 Gets the identifier of this section.
 </summary>
 <value>
 The identifier.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestSectionResult.SubId">
 <summary>
 Gets the sub identifier, when this section was called.
 </summary>
 <value>
 The sub identifier.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestSectionResult.StepResults">
 <summary>
 Gets the result steps.
 </summary>
 <value>
 The result steps.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestSectionResult.StationResult">
 <summary>
 Gets the corresponding station result.
 </summary>
 <value>
 The station result.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestSectionResult.Ok">
 <summary>
 Gets a value indicating whether all teststep values are valid.
 </summary>
 <value>
   <c>true</c> if all teststeps are ok; otherwise, <c>false</c>.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStationResult.Id">
 <summary>
 Gets the identifier of the result. It is a combination of StationId and TestId.
 </summary>
 <value>
 The combined identifier.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStationResult.StationId">
 <summary>
 Gets the identifier of the station.
 </summary>
 <value>
 The identifier.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStationResult.TestId">
 <summary>
 Gets the identifier of the Test  (or the corresponding state).
 </summary>
 <value>
 The test identifier.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStationResult.Created">
 <summary>
 Gets the created datetime.
 </summary>
 <value>
 The datetime of creation.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStationResult.SectionResults">
 <summary>
 Gets the sections.
 </summary>
 <value>
 The sections.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStationResult.TestTime">
 <summary>
 Gets the test time in milliseconds.
 </summary>
 <value>
 The test time (milliseconds).
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStationResult.IdleTime">
 <summary>
 Gets the idle time in milliseconds. The time before the test in this station has started.
 </summary>
 <value>
 The idle time (milliseconds).
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStationResult.Result">
 <summary>
 Gets the result of the test in this station.
 </summary>
 <value>
 The result of the test.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStationResult.FailedStepResults">
 <summary>
 Gets the collection containing information regarding all failed teststeps.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStationResult.StepCount">
 <summary>
 Gets the total number of executed test steps.
 </summary>
 <value>
 The total number of executed test steps.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStationResult.Pathes">
 <summary>
 Gets the pathes (file names or directory names).
 </summary>
 <value>
 The pathes (file names or directory names).
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.ExecutionNumberInTest">
 <summary>
 A value indicating the order teststeps have been executed.
 </summary>
 <value>
 The line number.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.ThreadNumber">
 <summary>
 Gets the thread number.
 </summary>
 <value>
 The thread number.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.ExecutionNumberInThread">
 <summary>
 Gets the execution number in thread.
 </summary>
 <value>
 The execution number in thread.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.SectionId">
 <summary>
 Gets the Id of the Section.
 </summary>
 <value>
 The section id.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.SectionSubId">
 <summary>
 Gets the subid.
 </summary>
 <value>
 The subid.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.SectionKey">
 <summary>
 Gets the Key of the Section. It is a addition of SectionId and SubId
 </summary>
 <value>
 The section key.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.Id">
 <summary>
 Gets the key(text) of the teststep
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.PluginName">
 <summary>
 Gets the name of the plugin represented teststep is referencing.
 </summary>
 <value>
 The name of the plugin.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.CategoryName">
 <summary>
 Gets the plugin category.
 </summary>
 <value>
 The plugin category.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.CommandName">
 <summary>
 Gets the plugin command.
 </summary>
 <value>
 The plugin command.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.ExternalId">
 <summary>
 Gets the teststep number.
 </summary>
 <value>
 The teststep number.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.EnglishText">
 <summary>
 Gets the english text of teststep.
 </summary>
 <value>
 The english text.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.LocalizedText">
 <summary>
 Gets the localized text of teststep.
 </summary>
 <value>
 The localized text.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.Text">
 <summary>
 Gets the operator text of teststep.
 </summary>
 <value>
 The operator text.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.LowerLimit">
 <summary>
 Gets the lower limit.
 </summary>
 <value>
 The lower limit.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.UpperLimit">
 <summary>
 Gets the upper limit.
 </summary>
 <value>
 The upper limit.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.Format">
 <summary>
 Gets the format string for the value.
 </summary>
 <value>
 The format string.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.Unit">
 <summary>
 Gets the unit.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.CompareMode">
 <summary>
 Gets the compare mode.
 </summary>
 <value>
 The compare mode.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.ReportingLevel">
 <summary>
 Gets the reporting level.
 </summary>
 <value>
 The reporting level.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.DelayBeforeExecution">
 <summary>
 Gets the duration before the step was executed.
 </summary>
 <value>
 The duration in milliseconds.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.Value">
 <summary>
 Gets the measured value.
 </summary>
 <value>
 The measured value.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.TypeOfValue">
 <summary>
 Gets the type of value.
 </summary>
 <value>
 The type of value.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.StatusText">
 <summary>
 Gets the status text that was reported by execution engine.
 </summary>
 <value>
 The status text.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.ExecutionStatus">
 <summary>
 Gets or sets the execution status.
 </summary>
 <value>
 The execution status.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.ValidationStatus">
 <summary>
 Gets the status.
 </summary>
 <value>
 The status.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.Ok">
 <summary>
 Gets a value indicating whether the teststeps value was valid or not.
 </summary>
 <value>
   <c>true</c> if teststep was IO; otherwise, <c>false</c>.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.FailureLocation">
 <summary>
 Gets the location of the failure.
 </summary>
 <value>
 The location of the failure.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.FailureType">
 <summary>
 Gets the type of the failure.
 </summary>
 <value>
 The type of the failure.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.StepTime">
 <summary>
 Gets the duration that was measured during execution.
 </summary>
 <value>
 The duration in milliseconds.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.StepTicks">
 <summary>
 Gets the duration that was measured during execution.
 </summary>
 <value>
 The duration in steps.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.Reporting">
 <summary>
 Gets the reporting level.
 </summary>
 <value>
 The reporting level.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.NumberOfExecutions">
 <summary>
 Gets the number of executions
 </summary>
 <value>
 The number of execute.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.NumberOfRetries">
 <summary>
 Gets the number of retries
 </summary>
 <value>
 The number of retries.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepResult.AbortReason">
 <summary>
 Gets the abort reason, if aborted.
 </summary>
 <value>
 The abort reason.
 </value>
</member>
<member name="M:Kostal.Testman.Framework.Base.ExtensionException.#ctor(System.String)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.ExtensionException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ExtensionException.#ctor(System.String,System.Exception)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.ExtensionException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.ExecutionDialogStyle">
 <summary>
 Possible styles for the retry dialog of execution engine.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.ExecutionEngineDialogStatus">
 <summary>
 Possible status returned by the execution engine dialog.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.ExecutionRuntimeData">
 <summary>
 ExecutionRuntimeData only a Container for Singletons
 PerResolve Runtime Class
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.CounterEntity">
 <summary>
 Simple container to keep count of passed and failed testruns.
 Used for serialization
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.CounterEntity.#ctor">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.CounterEntity" /> class.
 Pass and Fail properties both have a value of zero.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.CounterEntity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
 <summary>
 Initializes a new instance of CounterEntity with serialized data.
 </summary>
 <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
 <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/>" that contains contextual information about the source or destination.</param>
 <exception cref="T:System.ArgumentNullException">The info parameter is null.</exception>
 <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/>" is zero (0).</exception>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.CounterEntity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
 <summary>
 Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
 </summary>
 <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
 <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
 <exception cref="T:System.Security.SecurityException">
 The caller does not have the required permission.
   </exception>
</member>
<member name="P:Kostal.Testman.Framework.Base.CounterEntity.Pass">
 <summary>
 Gets or sets the value indicating the count of successful tests.
 </summary>
 <value>count of successful tests</value>
 <returns>new count of successful tests.</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.CounterEntity.Fail">
 <summary>
 Gets or sets the value indicating the count of failed tests.
 </summary>
 <value>count of failed tests</value>
 <returns>new count of failed tests.</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.CounterEntity.Ignored">
 <summary>
 Gets or sets the value indicating the count of ignored tests.
 </summary>
 <value>count of ignored tests</value>
 <returns>new count of ignoreded tests.</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.CounterEntity.ToString">
 <summary>
 Returns a <see cref="T:System.String" /> that represents this instance.
 </summary><returns>
 A <see cref="T:System.String" /> that represents this instance.
 </returns>
</member>
<member name="T:Kostal.Testman.Framework.Base.FrameworkException">
 <summary>
 Base exception for all exceptions that are explicitly thrown by the framework.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.FrameworkException.#ctor">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.FrameworkException"/>
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.FrameworkException.#ctor(System.String)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.FrameworkException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.FrameworkException.#ctor(System.String,System.Exception)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.FrameworkException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.IClock.Tick">
 <summary>
 Occurs when the clock wnats to tick.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.IClock.Interval">
 <summary>
 Gets or sets the interval of the clock in milliseconds.
 </summary>
 <value>
 The interval.
 </value>
</member>
<member name="T:Kostal.Testman.Framework.Base.LifetimeMethod">
 <summary>
 The possible varaints of lifetime of a unity created object
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.LifetimeMethod.ContainerControlled">
 <summary>
 Singleton
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.LifetimeMethod.PerResolve">
 <summary>
 Instances are created new every time and also a signal is provided to the default build plan, marking the type so that instances are reused across the build up object graph.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.LifetimeMethod.Transient">
 <summary>
 Instances are created new every time
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.TestResult">
 <summary>
 The possbile results of a test
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TestResult.None">
 <summary>
 No result at this time, normally the test is already running
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TestResult.Successful">
 <summary>
 The test was successful
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TestResult.Failed">
 <summary>
 The test was failed
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TestResult.Aborted">
 <summary>
 The test was aborted
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TestResult.Ignored">
 <summary>
 The test run was ignored by the station
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TestResult.Disabled">
 <summary>
 The test run was disabled in this station
 </summary>
</member>
<member name="E:Kostal.Testman.Framework.Base.Kostal.Testman.Framework.Base.IStartupMessenger.StartupMessengerEvent">
 <summary>
 Occurs when Startup Messenge is changing.
 </summary>
</member>
<member name="E:Kostal.Testman.Framework.Base.Kostal.Testman.Framework.Base.IStartupMessenger.StartupVisibilityEvent">
 <summary>
 Occurs when Startup visibility is changing.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.Kostal.Testman.Framework.Base.IStartupMessenger.Message(System.String)">
 <summary>
 show Message in Startup View
 </summary>
 <param name="Information">Information as String</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.Kostal.Testman.Framework.Base.IStartupMessenger.Hide">
 <summary>
 Hide's Startup window
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.Kostal.Testman.Framework.Base.IStartupMessenger.Show">
 <summary>
 Show's Startup window
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.IStartupMessenger.Message(System.String)">
 <summary>
 show Message in Startup View
 </summary>
 <param name="Information">Information as String</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.IStartupMessenger.Hide">
 <summary>
 Hide's Startup window
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.MachineStateLockException">
 <summary>
 Represents errors that occured during interaction with state machine.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.MachineStateLockException.#ctor">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.MachineStateLockException"/>
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.MachineStateLockException.#ctor(System.String)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.MachineStateLockException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.MachineStateLockException.#ctor(System.String,System.Exception)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.MachineStateLockException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.IStationStateManager">
 <summary>
 the state machine maintaining the current machine state.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.IStationStateManager.StationStates">
 <summary>
 The station states.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.IStationStateManager.StationStates.Alarm">
 <summary>
 An Alarm state has been activated (Alarm-Management).
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.IStationStateManager.StationStates.Failure">
 <summary>
 Moving from one stable state to another was not successful (including a try of rollback)
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.IStationStateManager.StationStates.Aborted">
 <summary>
 The executed (plugin) code indicates a (soft) problem
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.IStationStateManager.StationStates.Disabled">
 <summary>
 The station has been disabled
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.IStationStateManager.StationStates.Ignore">
 <summary>
 The next test will be ignored
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.IStationStateManager.SetStationDisabled">
 <summary>
 Sets the station to disabled.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.IStationStateManager.SetStationDisabled(System.Boolean)">
 <summary>
 Sets the station to disabled.
 </summary>
 <param name="preventAlsoTurningHigher">if set to <c>true</c>, turning to a higher state is also prevented, otherwise only the ActionRequests in stable states.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.IStationStateManager.SetStationEnabled">
 <summary>
 Sets the station to enabled.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.IStationStateManager.SetStationEnabled(Kostal.Testman.Framework.Base.TurnableStates)">
 <summary>
 Sets the station enabled and turns to the given state.
 </summary>
 <param name="newState">The new state.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.IStationStateManager.SetTestingDisabled(System.Boolean)">
 <summary>
 Sets testing to disabled.
 </summary>
 <param name="nextTestOnly">if set to <c>true</c>., after the ignore test, the next test will be performed, otherwise the test will be ignored permanent.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.IStationStateManager.SetTestingEnabled">
 <summary>
 Sets testing to enabled.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.IStationStateManager.TurnToTest(System.String)">
 <summary>
 Switches the state machine from state Test to Run or On.
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.MachineStateException">
 <summary>
 Represents errors that occured during interaction with state machine.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.MachineStateException.#ctor">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.MachineStateException"/>
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.MachineStateException.#ctor(System.String)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.MachineStateException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.MachineStateException.#ctor(System.String,System.Exception)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.MachineStateException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.MachineStateEventArgs">
 <summary>
 Provides data for the Core.IStationStateManager.StateChanged event.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.MachineStateEventArgs.#ctor(Kostal.Testman.Framework.Base.MachineStates)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.MachineStateEventArgs" /> class.
 </summary>
 <param name="state">The machine state that is now active.</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.MachineStateEventArgs.MachineState">
 <summary>
 Gets the machine state that is active now.
 </summary>
 <value>
 The machine state that is now active.
 </value>
</member>
<member name="T:Kostal.Testman.Framework.Base.IProcessManager">
 <summary>
 Basic interface for a process manager.
 A process manager can manage available processes.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.IProcessManager.GetProcesses">
 <summary>
 Gets all available processes.
 </summary>
 <returns>all available processes as <see cref="T:System.Collections.Generic.IEnumerable`1"/></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.IProcessManager.Selected">
 <summary>
 Gets the current, active process.
 </summary>
<returns>The active process as <see cref="T:Kostal.Testman.Framework.Base.IProcessItem"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.IProcessManager.Select(System.String)">
 <summary>
 Changes the active process.
 </summary>
 <param name="processId">Name of process to activate.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.IProcessManager.Select(Kostal.Testman.Framework.Base.IProcessItem)">
 <summary>
 Changes the active process.
 </summary>
 <param name="processItem"><see cref="T:Kostal.Testman.Framework.Base.IProcessItem"/> to activate.</param>
</member>
<member name="T:Kostal.Testman.Framework.Base.ProcessEventArgs">
 <summary>
 Provides data for the <see cref="E:Kostal.Testman.Framework.Base.SystemState.IProcessState.ProcessChanged"/> and <see cref="E:Kostal.Testman.Framework.Base.SystemState.IProcessState.ProcessChanging"/> events.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ProcessEventArgs.#ctor(Kostal.Testman.Framework.Base.IProcessItem)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.ProcessEventArgs" /> class.
 The Cancel property is initialized with <c>false</c>.
 </summary>
 <param name="item">The process that is getting active.</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.ProcessEventArgs.Process">
 <summary>
 Gets or sets the <see cref="T:Kostal.Testman.Framework.Base.IProcessItem" /> that is getting active.
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.StartupMessenger">
 <summary>
 Handle visiblitity and Informations in Startup View 
 </summary>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.StartupMessenger.StartupMessengerEvent">
 <summary>
 Occurs when Startup Messenge is changing.
 </summary>
</member>
<member name="E:Kostal.Testman.Framework.Base.StartupMessenger.StartupVisibilityEvent">
 <summary>
 Occurs when Startup visibility is changing.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.StartupMessenger.Message(System.String)">
 <summary>
 show Message in Startup View
 </summary>
 <param name="Information">Information as String</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.StartupMessenger.Hide">
 <summary>
 Hide's Startup window
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.StartupMessenger.Show">
 <summary>
 Show's Startup window
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.StartupMessengerEventArgs">
 <summary>
 Provides data for the <see cref="E:Kostal.Testman.Framework.Base.StartupMessenger.StartupMessengerEvent"/> events.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.StartupMessengerEventArgs.#ctor(System.String)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.StartupMessengerEventArgs" /> class.
 </summary>
 <param name="Message">new Message in Startup View.</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.StartupMessengerEventArgs.Message">
 <summary>
 Gets or sets the <see cref="P:Kostal.Testman.Framework.Base.StartupMessengerEventArgs.Message" /> that is getting active.
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.StartupVisibilityEventArgs">
 <summary>
 Provides data for the <see cref="E:Kostal.Testman.Framework.Base.StartupMessenger.StartupVisibilityEvent"/> events.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.StartupVisibilityEventArgs.#ctor(System.Boolean)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.StartupMessengerEventArgs" /> class.
 </summary>
 <param name="visible">control visibility of Startup View.</param>  
</member>
<member name="P:Kostal.Testman.Framework.Base.StartupVisibilityEventArgs.Visible">
 <summary>
 Gets or sets the <see cref="P:Kostal.Testman.Framework.Base.StartupVisibilityEventArgs.Visible" /> that is getting active.
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.UserMessenger">
 <summary>
 Handle Message from Framework to the Operator
 </summary>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.UserMessenger.UserMessengerEvent">
 <summary>
 Occurs when User Messenger changes.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserMessenger.Message(System.String,System.Drawing.Color)">
 <summary>
 Changes the User Message
 </summary>
 <param name="information">information to user </param>
 <param name="color">color of User Message</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserMessenger.Message(System.String)">
 <summary>
 Changes the User Message
 </summary>
 <param name="information">information to user </param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserMessenger.SendMessage(System.String)">
 <summary>
 Changes the User Message
 </summary>
 <param name="information">information to user </param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserMessenger.AutoRefresh(System.Boolean)">
 <summary>
 Changes the User Message
 </summary>
 <param name="enable">Enable/Disable AutoRefresh</param>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.UserMessengerEventArgs">
 <summary>
 Provides data for the <see cref="E:Kostal.Testman.Framework.Base.UserMessenger.UserMessengerEvent"/> events.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.UserMessengerEventArgs.Message">
 <summary>
 Gets the Message that is active.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.UserMessengerEventArgs.Color">
 <summary>
 Gets the System.Drawing.Color that is active.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.UserMessengerEventArgs.MediaColor">
 <summary>
 Gets the System.Windows.Media.Color that is active.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.UserMessengerEventArgs.AutoRefresh">
 <summary>
 Gets the value if AutoRefresh is active.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserMessengerEventArgs.#ctor(System.String,System.Drawing.Color)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.UserMessengerEventArgs" /> class.
 </summary>
 <param name="Message">Message for operator.</param>
 <param name="color">color of message.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserMessengerEventArgs.#ctor(System.Boolean)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.UserMessengerEventArgs" /> class.
 </summary>
 <param name="autoRefresh">enable/disable autoRefresh</param>
</member>
<member name="T:Kostal.Testman.Framework.Base.MachineStateTransitionCompletedEventArgs">
 <summary>
 Provides data for the IStationStateManager.TransitionCompleted event.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.MachineStateTransitionCompletedEventArgs.#ctor(Kostal.Testman.Framework.Base.MachineStateTransitionStartedEventArgs)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.MachineStateTransitionCompletedEventArgs" /> class.
 </summary>
 <param name="startArgs">The <see cref="T:Kostal.Testman.Framework.Base.MachineStateTransitionStartedEventArgs" /> instance containing the event data to initialize this event.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.MachineStateTransitionCompletedEventArgs.#ctor(Kostal.Testman.Framework.Base.MachineStates,Kostal.Testman.Framework.Base.MachineStates,System.Boolean)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.MachineStateTransitionCompletedEventArgs" /> class.
 </summary>
 <param name="sourceState">The state transition origins.</param>
 <param name="targetState">The target of transition.</param>
 <param name="success">if set to <c>true</c> the transition was successful; otherwise, <c>false</c>.</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.MachineStateTransitionCompletedEventArgs.SourceState">
 <summary>
 The origin of the transition.
 </summary>
 <value>
 The origin of the transition.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.MachineStateTransitionCompletedEventArgs.TargetState">
 <summary>
 The target of the transition.
 </summary>
 <value>
 The target of the transition.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.MachineStateTransitionCompletedEventArgs.Success">
 <summary>
 Gets a value indicating whether the transition was successful or not.
 </summary>
 <value>
   <c>true</c> if success; otherwise, <c>false</c>.
 </value>
</member>
<member name="T:Kostal.Testman.Framework.Base.MachineStateTransitionStartedEventArgs">
 <summary>
 Provides data for the Core.IStationStateManager.TransitionStarted event.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.MachineStateTransitionStartedEventArgs.#ctor(Kostal.Testman.Framework.Base.MachineStates,Kostal.Testman.Framework.Base.MachineStates)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.MachineStateTransitionStartedEventArgs" /> class.
 </summary>
 <param name="sourceState">The state this transition origins.</param>
 <param name="targetState">The state this transition targets.</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.MachineStateTransitionStartedEventArgs.SourceState">
 <summary>
 The origin of the transition.
 </summary>
 <value>
 The origin of the transition.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.MachineStateTransitionStartedEventArgs.TargetState">
 <summary>
 The target of the transition.
 </summary>
 <value>
 The target of the transition.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.MachineStateTransitionStartedEventArgs.Canceled">
 <summary>
 Gets or sets a value indicating whether this <see cref="T:Kostal.Testman.Framework.Base.MachineStateTransitionStartedEventArgs" /> is canceled.
 </summary>
 <value>
   <c>true</c> if canceled; otherwise, <c>false</c>.
 </value>
</member>
<member name="T:Kostal.Testman.Framework.Base.IRuntimeConsumer">
 <summary>
 Basic interface for all Services in testman environment to extends functionality
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.IRuntimeConsumer.SetRuntime(Kostal.Testman.Framework.Base.IApplicationRuntimeManager)">
 <summary>
 Sets the runtime instance.
 </summary>
 <param name="runtime">The runtime instance as <see cref="T:Kostal.Testman.Framework.Base.IApplicationRuntimeManager"/>.</param>
</member>
<member name="T:Kostal.Testman.Framework.Base.TestmanInformation">
 <summary>
 Contains some shared methods for informational usage.
 <remarks>
 </remarks>
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.TestmanInformation.GetAssemblyVersions">
 <summary>
 A list of loaded testman assemblies and their version.
 For every assembly there is a list entry. The format is 'AssemblyName  version'
 </summary>
 <value></value>
 <returns>the list of testman assemblies</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.TestmanInformation.GetTestmanVersion">
 <summary>
 Highest Version of all Testman assemblys
 </summary>
 <value></value>
 <returns>version</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.TestmanInformation.GetIp">
 <summary>
 Returns the Internet Protocol (IP) addresses of this local computer
 </summary>
 <returns>A string with the ip adresses separated by " ; "</returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.TestmanInformation.GetHostName">
 <summary>
 Gets the host name of the local computer.
 </summary>
 <returns>A string that contains the DNS host name of the local computer.</returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.TestmanInformation.OperatingSystemInformation">
 <summary>
 Returns a multiline string that contains the information of the OS System and the .Net version
 </summary>
 <returns> The multiline string with the information.</returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.TestmanInformation.IsRunning">
 <summary>
 Check if a instance of current application is running
 </summary>
 <returns>
 returns true if there is no other instance
 otherwise returns false
 </returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.TestmanInformation.BasePath">
 <summary>
 Gets or sets the root directory of the application.
 </summary>
 <exception cref="T:System.IO.DirectoryNotFoundException">If the basepath couldn't be analyzed correctly</exception>
</member>
<member name="P:Kostal.Testman.Framework.Base.TestmanInformation.ApplicationPath">
 <summary>
 Gets the fully qualified path of the application files.
 Ends with the DirectorySeparatorChar. 
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.TestmanInformation.WorkingPath">
 <summary>
 Gets the fully qualified path of the current working directory.
 </summary>
 <returns>A string containing a directory path ended with the DirectorySeparatorChar</returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.TestmanInformation.ConfigPath">
 <summary>
 Gets the fully qualified path of the current working directory added with the Testman config folder.
 </summary>
 <returns>A string containing a directory path ended with the DirectorySeparatorChar</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.TestmanInformation.SearchFiles(System.Func{System.String,System.Boolean})">
 <summary>
 Search for files matching the predicate. First in the basePath of Testman and if there is NO matching file in the lib\core folder
 </summary>
 <param name="predicate">Func that gets the filename and returns boolean if the file matches.</param>
 <returns>List of files that match the predicate</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.TestmanInformation.TotalProcessorTime">
 <summary>
 Gets the total processor time for the Testman process.
 </summary>
 <value>
 A <see cref="T:System.TimeSpan" /> that indicates the amount of time that the associated process has spent utilizing the CPU. This value Is the sum of the <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> And the <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" />.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.TestmanInformation.StartTime">
 <summary>
 Gets the time that the Testman process was started.
 </summary>
 <value>
 The start time as <see cref="T:System.Date" />.
 </value>
</member>
<member name="M:Kostal.Testman.Framework.Base.TestmanInformation.AddDirectorySeparatorCharAtEnd(System.String)">
 <summary>
 Adds the directory separator character at end if not present.
 </summary>
 <param name="path">The path.</param>
 <returns>The path with one separator at the end.</returns>
</member>
<member name="T:Kostal.Testman.Framework.Base.Util">
 <summary>
 Provides extension methods to do validation and conversion
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.Util.IsByteArray(System.String)">
 <summary>
 Determines whether the inserted value is a <see cref="T:System.Byte"/> where either a whitespace or a hyphon is used as seperator char.
 </summary>
 <param name="value">The value to be checked.</param><returns>
   <c>true</c> if value is byte array; otherwise, <c>false</c>.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Util.IsByteArrayWhitespaceSeperated(System.String)">
 <summary>
 Determines whether the inserted value is a <see cref="T:System.Byte"/> where a whitespace is used as seperator char.
 </summary>
 <param name="value">The value to be checked.</param><returns>
   <c>true</c> if value is byte array; otherwise, <c>false</c>.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Util.IsByteArrayHyphonSeperted(System.String)">
 <summary>
 Determines whether the inserted value is a <see cref="T:System.Byte"/> where a hyphon is used as seperator char.
 </summary>
 <param name="value">The value to be checked.</param><returns>
   <c>true</c> if value is byte array; otherwise, <c>false</c>.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Util.IsLinkSyntax(System.String)">
 <summary>
 Determines whether value is in link syntax.
 </summary>
 <param name="value">The value to be checked.</param><returns>
   <c>true</c> if value is in link syntax; otherwise, <c>false</c>.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Util.FindExistingFileInTestmanFilestructure(System.String)">
 <summary>
 Searches for an existing file within testman filestructure
 </summary>
 <param name="value">Filename and relativ path of the file to be searched.</param>
 <returns>The absolut path</returns>
 <exception cref="T:System.IO.FileNotFoundException">In case the file is not existing.</exception>
</member>
<member name="M:Kostal.Testman.Framework.Base.Util.CreatePathRelativeToTestmanFilestructure(System.String)">
 <summary>
 Tries to make an absolut path relative to testman file structure.
 this only works if the provided path is within the testman base directory. Otherwise the absolut path is returned
 </summary>
 <param name="value">Filename and absolut path to be transformed.</param>
 <returns>the relative path if possible, otherwise the inserted path.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Util.FitToTestmanFileStructure(System.String)">
 <summary>
 Updates the inserted relativ path and makes it absolut to testman filestructure.
 </summary>
 <param name="value">Filename and/or relativ path to be fit.</param>
 <returns>the absolut path without any existence checks.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Util.LinebreakTooltip(System.String,System.Int32)">
 <summary>
 Automatially linebreaks a text to generate a multiline text.
 Max blocklength is <paramref name="maxLength"/>. 
 </summary>
 <param name="original">The string to be transformed into multiline string.</param>
 <param name="maxLength">max length of a single line.</param>
 <returns>The inserted string as multiline string.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Util.LinebreakTooltip(System.String)">
 <summary>
 Automatially linebreaks a text to generate a multiline text.
 Max blocklength is set fixed to 80. 
 </summary>
 <param name="original">The string to be transformed into multiline string.</param>
 <returns>The inserted string as multiline string.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Util.QuoteValue(System.String)">
 <summary>
 Quate a value
 </summary>
 <param name="value"></param>
 <returns>nothing or String.Format("""{0}""", value)</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.Util.EscapeValue(System.String)">
 <summary>
 Escape a Value
 </summary>
 <param name="value"></param>
 <returns>nothing or RegexFlowFileEscaping.Replace(value, "$1""""")</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.Util.EscapeAndQuote(System.String)">
 <summary>
 Escape And Quote a value
 </summary>
 <param name="value"></param>
 <returns>nothing or value.EscapeValue().QuoteValue()</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.Util.ToStringSupportingNothing(System.String)">
 <summary>
 supports ToString if Object is nothing
 </summary>
 <param name="message"></param>
 <returns>message or ""nothing""</returns>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.TesterMode">
 <summary>
 all types of TESTER_MODE
 </summary>
 <remarks></remarks>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.PRE">
 <summary>
  Vorprüfung
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.END">
 <summary>
 Endprüfung
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.HT">
 <summary>
 Containment / Combi Test „warm“
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.LT">
 <summary>
 Containment / Combi Test  „kalt“ 
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.RIH">
 <summary>
 Run-in Test  „warm“
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.RIC">
 <summary>
 Run- in Test  „kalt“ 
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.ICT">
 <summary>
 Incircuit Prüfung
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.VIS">
 <summary>
 Visuelle Prüfung
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.AUD">
 <summary>
 Auditprüfung
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.GL1">
 <summary>
 Kleberüberprüfung 
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.PA1">
 <summary>
 Pastenüberprüfung
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.RE1">
 <summary>
 Reflow – Prüfung
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.SE1">
 <summary>
 Vergussprüfung
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.WA1">
 <summary>
 Wellen - Prüfung
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.BSC">
 <summary>
 Boundary Scan 
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.RT">
 <summary>
 Containment / Combi Test Raumtemp
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.AOI">
 <summary>
 Optische Leiterplatten Prüfung
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TesterMode.FPY">
 <summary>
 First Part yield
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJob.Config">
 <summary>
 Gets the job configuration.
 </summary>
 <value>
 The job configuration.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJob.RootDefinition">
 <summary>
 Gets the root definition.
 </summary>
 <value>
 The root definition.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJob.JobResult">
 <summary>
 Gets the Job result.
 </summary>
 <value>
 The Job result.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJob.DutContext">
 <summary>
 Gets the context of the DUT.
 </summary>
 <value>
 The context of the DUT.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJob.Number">
 <summary>
 Gets the number of this job.
 </summary>
 <value>
 The job number.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJob.SerialNumber">
 <summary>
 Gets the serial number.
 </summary>
 <value>
 The serial number of this job.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJob.CarrierNumber">
 <summary>
 Gets the carrier identifier.
 </summary>
 <value>
 The carrier identifier of this job.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJob.ExternalNumber">
 <summary>
 Gets the external identifier.
 </summary>
 <value>
 The external identifier of this job.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJob.ProcessId">
 <summary>
 Gets the process identifier.
 </summary>
 <value>
 The process identifier of this job.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestJob.ArticleId">
 <summary>
 Gets the article identifier.
 </summary>
 <value>
 The article identifier of this job.
 </value>
</member>
<member name="T:Kostal.Testman.Framework.Base.TestRunner.ITestRunner">
 <summary>
 Executes test jobs
 </summary>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.TestRunner.ITestRunner.TestStarted">
 <summary>
 Occurs when a test has to be done.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.TestRunner.ITestRunner.TestingStarted">
 <summary>
 Occurs when a real test of a job has been started.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.TestRunner.ITestRunner.TestStepPerforming">
 <summary>
 Occurs when a step starts performing.
 </summary>
</member>
<member name="E:Kostal.Testman.Framework.Base.TestRunner.ITestRunner.TestStepPerformed">
 <summary>
 Occurs when a step was performed.
 </summary>
</member>
<member name="E:Kostal.Testman.Framework.Base.TestRunner.ITestRunner.TestingDone">
 <summary>
 Occurs when a real test of a job has been finished.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.TestRunner.ITestRunner.TestDone">
 <summary>
 Occurs when a test was been done.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.TestRunner.ITestRunner.StationResults">
 <summary>
 Gets the collection of station results.
 </summary>
 <value>
 The collection of station results.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.TestRunner.ITestRunner.TestJob">
 <summary>
 Gets the attached test job.
 </summary>
 <value>
 The attached test job.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.TestRunner.ITestRunner.Configuration">
 <summary>
 Gets the configuration of the test runner.
 </summary>
 <value>
 The configuration.
 </value>
</member>
<member name="T:Kostal.Testman.Framework.Base.JobEventArgs">
 <summary>
 Provides data for the job events.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.JobEventArgs.#ctor(Kostal.Testman.Framework.Base.ITestJob)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.JobEventArgs" /> class.
 </summary>
 <param name="job">The job that is done.</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.JobEventArgs.Job">
 <summary>
 Gets the done job.
 </summary>
 <returns>The completed job as <see cref="T:Kostal.Testman.Framework.Base.ITestJob"/>.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.TestRunnerException.#ctor">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.TestRunnerException"/>
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.TestRunnerException.#ctor(System.String)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.TestRunnerException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.TestRunnerException.#ctor(System.String,System.Exception)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.TestRunnerException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.TestStatus">
 <summary>
 Status of Test
 </summary>
 <remarks></remarks>
</member>
<member name="F:Kostal.Testman.Framework.Base.TestStatus.Normal">
 <summary>
 Normal Test
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TestStatus.NormalRetest">
 <summary>
 Normal Retest
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TestStatus.Analyse">
 <summary>
 Analyse
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.TestStatus.AnalyseRetest">
 <summary>
 Analyse Retest
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.ApplicationViewType.Simple">
 <summary>
 The simple view for the operator
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.ApplicationViewType.Station">
 <summary>
 The view of one station
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.ApplicationViewType.Overview">
 <summary>
 The overview view with all stations
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.ApplicationViewType.Prompts">
 <summary>
 The prompts view with all messages/prompts in a list
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.ApplicationViewType.Alarms">
 <summary>
 The alarms view with all alarms in a list
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.ApplicationViewType.Jobs">
 <summary>
 The jobs view with all jobs in a list
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.ApplicationViewType.Logs">
 <summary>
 The logs view with all fatals/erros/warnings in a list
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.ApplicationViewType.Individual">
 <summary>
 A self added view
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.Dialogs">
 <summary>
 Support dialog messages for testman.
 Dialog are shown depending on userlevel or type of machine (e.g automated environment)
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.Dialogs.RegisterUserController(Kostal.Testman.Framework.Base.IUserController)">
 <summary>
 Registers the user controller.
 </summary>
 <param name="userController">The systems user state.</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.Dialogs.IsQuite">
 <summary>
 Gets the value that indicates if system is quite.
 A quite system won't show failures. They will only get logged
 </summary>
 <returns><c>true</c> if system is quite; otherwise, <c>false</c>.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Dialogs.MessageBox(System.String,Microsoft.VisualBasic.MsgBoxStyle,System.String)">
 <summary>
 Shows a 'classic' message box.
 If system is running in quite mode, message box is supressed and content is send to logging engine.
 </summary>
 <param name="prompt">The prompt shown in message box.</param>
 <param name="msgBoxStyle">Style of message box.</param>
 <param name="title">The title.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.Dialogs.MessageBox(System.String,Microsoft.VisualBasic.MsgBoxStyle)">
 <summary>
 Shows a 'classic' message box.
 If system is running in quite mode, message box is supressed and content is send to logging engine.
 </summary>
 <param name="prompt">The prompt shown in message box.</param>
 <param name="msgBoxStyle">Style of message box.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.Dialogs.MessageBox(System.String)">
 <summary>
 Shows a 'classic' message box.
 If system is running in quite mode, message box is supressed and content is send to logging engine.
 </summary>
 <param name="prompt">The prompt shown in message box.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.Dialogs.DeveloperMessageBox(System.String,Microsoft.VisualBasic.MsgBoxStyle,System.String)">
 <summary>
 Shows a 'developer' message box.
 It's like a 'classic' message box except it's only shown if you're logged in as developer.
 </summary>
 <param name="prompt">The prompt shown in message box.</param>
 <param name="msgBoxStyle">Style of message box.</param>
 <param name="title">The title.</param>
 <returns><c>True</c> if the dialog was shown, otherwise <c>False</c></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Dialogs.DeveloperMessageBox(System.String,Microsoft.VisualBasic.MsgBoxStyle)">
 <summary>
 Shows a 'developer' message box.
 It's like a 'classic' message box except it's only shown if you're logged in as developer.
 </summary>
 <param name="prompt">The prompt shown in message box.</param>
 <param name="msgBoxStyle">Style of message box.</param>
 <returns><c>True</c> if the dialog was shown, otherwise <c>False</c></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Dialogs.DeveloperMessageBox(System.String)">
 <summary>
 Shows a 'developer' message box.
 It's like a 'classic' message box except it's only shown if you're logged in as developer.
 </summary>
 <param name="prompt">The prompt shown in message box.</param>
 <returns><c>True</c> if the dialog was shown, otherwise <c>False</c></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Dialogs.DeveloperExceptionDialog(System.String,System.Exception,System.Boolean)">
 <summary>
 Shows a 'developer' exception dialog.
 This popup is only shown if you're logged in as developer.
 It shows the exception and detailed information like Stacktrace, exception details and inner exceptions.
 </summary>
 <param name="title">The title of dialog.</param>
 <param name="ex">The exception to be shown.</param>
 <param name="noAdditionalLogging">if set to <c>true</c> no additional logging is performed.</param>
 <returns><c>True</c> if the Dialog is shown, because the Userlevel is Developer, otherwise <c>False</c>.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Dialogs.DeveloperExceptionDialog(System.String,System.Exception)">
 <summary>
 Shows a 'developer' exception dialog.
 This popup is only shown if you're logged in as developer.
 If shows the exception and detailed information like Stacktrace, exception details and inner exceptions.
 </summary>
 <param name="ex">The exception to be shown.</param>
 <returns><c>True</c> if the Dialog is shown, because the Userlevel is Developer, otherwise <c>False</c>.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Dialogs.DeveloperExceptionDialog(System.Exception,System.Boolean)">
 <summary>
 Shows a 'developer' exception dialog.
 This popup is only shown if you're logged in as developer.
 If shows the exception and detailed information like Stacktrace, exception details and inner exceptions.
 </summary>
 <param name="ex">The exception to be shown.</param>
 <param name="noAdditionalLogging">if set to <c>true</c> no additional logging is performed.</param>
 <returns><c>True</c> if the Dialog is shown, because the Userlevel is Developer, otherwise <c>False</c>.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Dialogs.DeveloperExceptionDialog(System.Exception)">
 <summary>
 Shows a 'developer' exception dialog.
 This popup is only shown if you're logged in as developer.
 If shows the exception and detailed information like Stacktrace, exception details and inner exceptions.
 </summary>
 <param name="ex">The exception to be shown.</param>
 <returns><c>True</c> if the Dialog is shown, because the Userlevel is Developer, otherwise <c>False</c>.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.Dialogs.ExceptionDialog(System.Exception)">
 <summary>
 Shows a 'standard' exception dialog.
 If shows the exception and detailed information like Stacktrace, exception details and inner exceptions.
 If system is running in quite mode, message box is supressed and content is send to logging engine.
 </summary>
 <param name="ex">The exception to be shown.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.Dialogs.ExceptionDialog(System.String,System.Exception)">
 <summary>
 Shows a 'standard' exception dialog.
 If shows the exception and detailed information like Stacktrace, exception details and inner exceptions.
 If system is running in quite mode, message box is supressed and content is send to logging engine.
 </summary>
 <param name="ex">The exception to be shown.</param>
 <param name="title">The title of dialog.</param>
</member>
<member name="T:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController">
 <summary>
 Interface for a gui controller.
 GuiController manages the elements shown on a certain component.
 You can add multiple views and switch the view shown up currently.
 <remarks></remarks>
 </summary>
</member>
<member name="E:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.ModalOnShow">
 <summary>
 Occurs when a UI is shown in modal mode.
 </summary>
</member>
<member name="E:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.ModalOnHide">
 <summary>
 Occurs when a UI exits modal mode.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.ShowModal(System.String)">
 <summary>
 Shows a registered UI in modal mode.
 </summary>
 <param name="name">The name of the UI to be shown modal.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.Contains(System.String)">
 <summary>
 Determines whether a UI with the specified name is registered in <see cref="T:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController"/>.
 </summary>
 <param name="name">The name to be checked.</param><returns>
   <c>true</c> if <see cref="T:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController"/> contains the specified name; otherwise, <c>false</c>.
 </returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.Item(System.String)">
 <summary>
 Gets the <see cref="T:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceElement" /> with the specified name.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.SetBaseContainer(System.Windows.Forms.Control)">
 <summary>
 Sets the base container.
 The base container, or view base is the control that works as host for the UI elements.
 If you call show the UI to be shown will be added as a child to base container.
 </summary>
 <param name="view">The view acting as view base.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.Register(System.String,System.Windows.Forms.Control,System.String)">
 <summary>
 Registers a new element to be showable by the GuiController.
 </summary>
 <param name="name">unique name of the UI</param>
 <param name="control">the control representing the ui</param>
 <param name="operatorText">text shown in the Testman sidebar.</param>
 <returns>true for successful add, false else</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.Register(System.String,Kostal.Testman.Framework.Base.UserLevel,System.Windows.Forms.Control,System.String)">
 <summary>
 Registers a new element to be showable by the GuiController.
 </summary>
 <param name="name">unique name of the UI</param>
 <param name="control">the control representing the ui</param>
 <param name="operatorText">text shown in the Testman sidebar.</param>
 <returns>true for successful add, false else</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.Register(System.String,System.Windows.Controls.Control,System.String)">
 <summary>
 Registers a new element to be showable by the GuiController.
 </summary>
 <param name="name">unique name of the gui</param>
 <param name="control">the control to show</param>
 <param name="operatorText">text shown in the Testman sidebar.</param>
 <returns>true for successful add, false else</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.Register(System.String,Kostal.Testman.Framework.Base.UserLevel,System.Windows.Controls.Control,System.String)">
 <summary>
 Registers a new element to be showable by the GuiController.
 </summary>
 <param name="name">unique name of the gui</param>
 <param name="control">the control to show</param>
 <param name="operatorText">text shown in the Testman sidebar.</param>
 <returns>true for successful add, false else</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.Register(System.String,Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceElement)">
 <summary>
 Registers a new element to be showable by the GuiController.
 </summary>
 <param name="name">unique name of the gui</param>
<param name="guiElement">the guiElement to add</param>
 <returns>true for successful add, false else</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.Deregister(System.String)">
 <summary>
 Removes an element from the list of showable components
 </summary>
 <param name="name">name of element to remove</param>
 <returns>true for a successful remove, false else.</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.Replace(System.String,Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceElement)">
 <summary>
 Replaces an element to be showable by the GuiController.
 </summary>
 <param name="id">unique id of element</param>
<param name="element">the guiElement to add</param>
 <returns>true for successful add, false else</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.Show(System.String)">
 <summary>
 Shows a gui.
 </summary>
 <param name="id">id of element to show up.</param>
 <returns>true if shown, false else.</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.GetKeyList(Kostal.Testman.Framework.Base.UserLevel)">
 <summary>
 A list of the keys of all accessable views.
 </summary>
 <returns>array with the names of all registered guis.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.GetAllElements">
 <summary>
 A dictionary with all views.
 </summary>
 <returns></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.GetKeyList">
 <summary>
 A list of all accessable views.
 </summary>
 <returns>array with the names of all registered guis.</returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.ShowLastShownGui">
 <summary>
 Shows the previously shown gui again
 </summary>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.LastShownElementId">
 <summary>
 Returns the id string of the last shown gui.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.CurrentShownElementId">
 <summary>
 Returns the id string of the actual shown gui.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.ShowDefaultElement">
 <summary>
 Shows the default gui.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.DefaultElementId">
 <summary>
 Gets or sets the default gui, that can be shown by the ShowDefault Property.
 </summary>
 <value>name of new default gui</value>
 <returns>current default gui</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.OnKey(System.Object,System.Windows.Forms.KeyEventArgs)">
 <summary>
 Called when a key is pressed within UI.
 </summary>
 <param name="sender">The sender.</param>
 <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs" /> instance containing the event data.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.RefreshGui">
 <summary>
 Refreshes the currently shown UI if it is a WPF ui.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.RefreshGui(System.Boolean)">
 <summary>
 Refreshes the currently shown UI if it is a WPF.
 Windows.Forms is only refreshed if the force parameter is set to true.
 </summary>
 <param name="force">true to refresh Windows.Forms UIs as well, false to only refresh WPF content.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.AbortModalView">
 <summary>
 Aborts the modal mode of the currently shown UI.
 Call only affects if current UI is shown modal.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.UiDispatcher">
 <summary>
 Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> of the main gui thread.
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceElement">
 <summary>
 interface for components, showable by gui controller.
 <remarks></remarks>
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceElement.GetControl">
 <summary>
 returns the showable component
 </summary>
 <returns>a panel or a usercontrol to show up.</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceElement.OnRegister">
 <summary>
 Executed when this element is registered on a guiController.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceElement.OnShow(System.Boolean)">
 <summary>
 Executed when the guiController shows up this view
 </summary>
 <param name="modal">true if the form is shown up modal.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceElement.OnHide">
 <summary>
 Executed when the guiController hides this view again
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceElement.OnDeregister">
 <summary>
 Executed when this element is deregistered from a guiController.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceElement.ExitModalMode">
 <summary>
 Executed by the element, if it want´s to leave the modal mode.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceElement.IsPublic">
 <summary>
 Gets or sets the accessability for this element
 </summary>
 <value>the current visibility</value>
 <returns>new visibility</returns>
 <remarks>only public views can be accessed direcly by the user.</remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceElement.UserLevel">
 <summary>
 Gets or sets the userlevels with rights to view this guiElement
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceElement.Text">
 <summary>
 Name, shown up in the Testman sidebar.
 </summary>
 <value>current name</value>
 <returns>new name</returns>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceElementKeyControled">
 <summary>
 A UI element that is interacting by keyboard input
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceElementKeyControled.OnKey(System.Object,System.Windows.Forms.KeyEventArgs)">
 <summary>
 Called when key is pressed within UI.
 </summary>
 <param name="sender">The sender.</param>
 <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs" /> instance containing the event data.</param>
</member>
<member name="T:Kostal.Testman.Framework.Base.UserInterface.IRunningUserInterface">
 <summary>
 Basic interface for a UserInterface, that is using in the main running process
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IRunningUserInterface.Startup(Kostal.Testman.Framework.Base.Components.ITestApplication)">
 <summary>
 Builds and shows the user interface.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IRunningUserInterface.Run">
 <summary>
 Passes control to the UI
 </summary>
 <remarks></remarks>
</member>
<member name="E:Kostal.Testman.Framework.Base.UserInterface.IRunningUserInterface.ClosingRequested">
 <summary>
 Occurs when the UserInterface is closing.
 </summary>
 <param name="sender"></param>
 <param name="e">Event args as <see cref="T:System.ComponentModel.CancelEventArgs"/>.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IRunningUserInterface.ApplicationExit">
 <summary>
 Passes control back to the application.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IRunningUserInterface.Shutdown">
 <summary>
 Shutdowns this instance.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IRunningUserInterface.ShowArticleSelector">
 <summary>
 Shows the article selector.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IRunningUserInterface.ShowApplicationView(Kostal.Testman.Framework.Base.ApplicationViewType,System.String,System.String)">
 <summary>
 Shows the application view.
 If PageView = Station, StationID and StationViewId could be set, too.
 </summary>
 <param name="pageView">The page view.</param>
 <param name="stationId">The station identifier.</param>
 <param name="stationViewId">The station view identifier.</param>
</member>
<member name="T:Kostal.Testman.Framework.Base.UserInterface.IShutdownUserInterface">
 <summary>
 Basic interface for a UserInterface, that is used in the shutdown process
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IShutdownUserInterface.Startup">
 <summary>
 Startups this instance.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IShutdownUserInterface.ShowStatus(System.String)">
 <summary>
 Shows the a message to the user, that should not be confirmed.
 </summary>
 <param name="statusText">The message text.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IShutdownUserInterface.ShowMessage(System.String)">
 <summary>
 Shows the a message to the user, that should be confirmed.
 </summary>
 <param name="messageText">The message text.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IShutdownUserInterface.Shutdown">
 <summary>
 Shutdowns this instance.
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.UserInterface.IStartupUserInterface">
 <summary>
 Basic interface for a UserInterface, that is used in the startup process
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IStartupUserInterface.Startup">
 <summary>
 Startups this instance.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IStartupUserInterface.ShowStatus(System.String)">
 <summary>
 Shows the a message to the user, that should not be confirmed.
 </summary>
 <param name="statusText">The message text.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IStartupUserInterface.ShowMessage(System.String)">
 <summary>
 Shows the a message to the user, that should be confirmed.
 </summary>
 <param name="messageText">The message text.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IStartupUserInterface.ShowMessage(System.String,System.Windows.MessageBoxImage)">
 <summary>
 Shows the a message to the user, that should be confirmed.
 </summary>
 <param name="messageText">The message text.</param>
 <param name="icon">The message icon.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserInterface.IStartupUserInterface.Shutdown">
 <summary>
 Shutdowns this instance.
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.UserInterface.OnShowEventArgs">
 <summary>
 Provides data for the <see cref="E:Kostal.Testman.Framework.Base.UserInterface.IUserInterfaceController.ModalOnShow"/> event.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.OverviewType">
 <summary>
 Defines the possible types of view, that can be shown during execution.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Kostal.Testman.Framework.Base.OverviewType.Simple">
 <summary>
 A simple gui, not showing any details just the Kostal logo and current tester status. (Best performance, less information)
 </summary>
 <remarks></remarks>
</member>
<member name="F:Kostal.Testman.Framework.Base.OverviewType.Progress">
 <summary>
 Shows a rotating gui element, indicating that tester is running. Failures will be shown directly within a little grid at the bottom. (Good performance, only failure informations)
 </summary>
 <remarks></remarks>
</member>
<member name="F:Kostal.Testman.Framework.Base.OverviewType.Grid">
 <summary>
 A status grid containing information about every executed teststep (configurable). (Weak performance, most informations)
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.IUserManager">
 <summary>
 Manages the userlevels and allows to switch from one level to another
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.IUserManager.CurrentLevel">
 <summary>
 Gets the current user level.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.IUserManager.SwitchToOperator">
 <summary>
 Switches to 'operator' user level.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.IUserManager.SwitchToService(System.String,System.String)">
 <summary>
 Switches to 'Service' user level using the provided credentials.
 </summary>
 <param name="username">The username used for login.</param>
 <param name="password">The password used for login.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.IUserManager.SwitchToDeveloper(System.String,System.String)">
 <summary>
 Switches to 'Developer' user level using the provided credentials.
 </summary>
 <param name="username">The username used for login.</param>
 <param name="password">The password used for login.</param>
</member>
<member name="T:Kostal.Testman.Framework.Base.StringConverter">
 <summary>
 Provides shared methods to convert a string 
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToByteArray(System.String)">
 <summary>
 Converts input string into a byte array
 </summary>
 <param name="value">The value to be converted.</param>
 <returns>The converted value as <see cref="T:System.Byte"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToBoolean(System.String)">
 <summary>
 Converts input string into boolean
 </summary>
 <param name="value">The value to be converted.</param>
 <returns>The converted value as <see cref="T:System.Boolean"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToByte(System.String)">
 <summary>
 Converts input string into byte
 </summary>
 <param name="value">The value to be converted.</param>
 <returns>The converted value as <see cref="T:System.Byte"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToByte(System.String,System.IFormatProvider)">
 <summary>
 Converts input string into byte
 </summary>
 <param name="value">The value to be converted.</param>
 <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> used during conversion</param>
 <returns>The converted value as <see cref="T:System.Byte"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToInteger(System.String)">
 <summary>
 Converts input string into integer
 </summary>
 <param name="value">The value to be converted.</param>
 <returns>The converted value as <see cref="T:System.Int32"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToInteger(System.String,System.IFormatProvider)">
 <summary>
 Converts input string into integer
 </summary>
 <param name="value">The value to be converted.</param>
 <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> used during conversion</param>
 <returns>The converted value as <see cref="T:System.Int32"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToLong(System.String)">
 <summary>
 Converts input string into long
 </summary>
 <param name="value">The value to be converted.</param>
 <returns>The converted value as <see cref="T:System.Int64"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToLong(System.String,System.IFormatProvider)">
 <summary>
 Converts input string into long
 </summary>
 <param name="value">The value to be converted.</param>
 <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> used during conversion</param>
 <returns>The converted value as <see cref="T:System.Int64"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToSingle(System.String)">
 <summary>
 Converts input string into single
 </summary>
 <param name="value">The value to be converted.</param>
 <returns>The converted value as <see cref="T:System.Single"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToSingle(System.String,System.IFormatProvider)">
 <summary>
 Converts input string into single
 </summary>
 <param name="value">The value to be converted.</param>
 <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> used during conversion</param>
 <returns>The converted value as <see cref="T:System.Single"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToDouble(System.String)">
 <summary>
 Converts input string into double
 </summary>
 <param name="value">The value to be converted.</param>
 <returns>The converted value as <see cref="T:System.Double"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToDouble(System.String,System.IFormatProvider)">
 <summary>
 Converts input string into double
 </summary>
 <param name="value">The value to be converted.</param>
 <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> used during conversion</param>
 <returns>The converted value as <see cref="T:System.Double"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToString(System.Byte[])">
 <summary>
 Returns a <see cref="T:System.String" /> that represents the inserted value.
 </summary>
 <param name="value">The value to be converted to string.</param><returns>
 A <see cref="T:System.String" /> that represents the inserted value.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToString(System.Boolean)">
 <summary>
 Returns a <see cref="T:System.String" /> that represents the inserted value.
 </summary>
 <param name="value">The value to be converted to string.</param><returns>
 A <see cref="T:System.String" /> that represents the inserted value.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToString(System.Byte)">
 <summary>
 Returns a <see cref="T:System.String" /> that represents the inserted value.
 </summary>
 <param name="value">The value to be converted to string.</param><returns>
 A <see cref="T:System.String" /> that represents the inserted value.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToString(System.Int32)">
 <summary>
 Returns a <see cref="T:System.String" /> that represents the inserted value.
 </summary>
 <param name="value">The value to be converted to string.</param><returns>
 A <see cref="T:System.String" /> that represents the inserted value.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToString(System.Int64)">
 <summary>
 Returns a <see cref="T:System.String" /> that represents the inserted value.
 </summary>
 <param name="value">The value to be converted to string.</param><returns>
 A <see cref="T:System.String" /> that represents the inserted value.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToString(System.Single)">
 <summary>
 Returns a <see cref="T:System.String" /> that represents the inserted value.
 </summary>
 <param name="value">The value to be converted to string.</param><returns>
 A <see cref="T:System.String" /> that represents the inserted value.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToString(System.Double)">
 <summary>
 Returns a <see cref="T:System.String" /> that represents the inserted value.
 </summary>
 <param name="value">The value to be converted to string.</param><returns>
 A <see cref="T:System.String" /> that represents the inserted value.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToString(System.Boolean,System.IFormatProvider)">
 <summary>
 Returns a <see cref="T:System.String" /> that represents the inserted value.
 </summary>
 <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> used during conversion</param>
 <param name="value">The value to be converted to string.</param><returns>
 A <see cref="T:System.String" /> that represents the inserted value.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToString(System.Byte,System.IFormatProvider)">
 <summary>
 Returns a <see cref="T:System.String" /> that represents the inserted value.
 </summary>
 <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> used during conversion</param>
 <param name="value">The value to be converted to string.</param><returns>
 A <see cref="T:System.String" /> that represents the inserted value.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToString(System.Int32,System.IFormatProvider)">
 <summary>
 Returns a <see cref="T:System.String" /> that represents the inserted value.
 </summary>
 <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> used during conversion</param>
 <param name="value">The value to be converted to string.</param><returns>
 A <see cref="T:System.String" /> that represents the inserted value.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToString(System.Int64,System.IFormatProvider)">
 <summary>
 Returns a <see cref="T:System.String" /> that represents the inserted value.
 </summary>
 <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> used during conversion</param>
 <param name="value">The value to be converted to string.</param><returns>
 A <see cref="T:System.String" /> that represents the inserted value.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToString(System.Single,System.IFormatProvider)">
 <summary>
 Returns a <see cref="T:System.String" /> that represents the inserted value.
 </summary>
 <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> used during conversion</param>
 <param name="value">The value to be converted to string.</param><returns>
 A <see cref="T:System.String" /> that represents the inserted value.
 </returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.StringConverter.ToString(System.Double,System.IFormatProvider)">
 <summary>
 Returns a <see cref="T:System.String" /> that represents the inserted value.
 </summary>
 <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> used during conversion</param>
 <param name="value">The value to be converted to string.</param><returns>
 A <see cref="T:System.String" /> that represents the inserted value.
 </returns>
</member>
<member name="T:Kostal.Testman.Framework.Base.ReportingLevel">
 <summary>
 Reporting level that has been assigned to a test step
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ReportingLevel.#ctor">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.ReportingLevel" /> class.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ReportingLevel.IsReporting">
 <summary>
 Returns true if any documentation level flag is set.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ReportingLevel.Doclevel">
 <summary>
 Gets or sets the documentation level (0=none  1=LGV 2=CAQ 4=lOG 8=TRACE .....)
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ReportingLevel.QualityDataSystem">
 <summary>
 Gets or sets documentation level flag 'CAQ'.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ReportingLevel.LocalQualityViewer">
 <summary>
 Gets or sets documentation level flag 'LqvShow'.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ReportingLevel.CanRetry">
 <summary>
 Gets or sets the Action step Retry flag.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ReportingLevel.CanAbort">
 <summary>
 Gets or sets the Action step Abort flag.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ReportingLevel.CanReset">
 <summary>
 Gets or sets the Action step Reset flag.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ReportingLevel.IsTestStep">
 <summary>
 Gets <c>True</c> if NO Action step flag is set
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ReportingLevel.IsActionStep">
 <summary>
 Gets <c>True</c> if any Action step flag is set
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ReportingLevel.IsUnfailable">
 <summary>
 Gets or sets the Unfailable flag for smart testing.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.ReportingLevel.ToString">
 <summary>
 Returns a <see cref="T:System.String" /> that represents this instance.
 </summary><returns>
 A <see cref="T:System.String" /> that represents this instance.
 </returns>
</member>
<member name="T:Kostal.Testman.Framework.Base.AlarmException">
 <summary>
 Represents errors that are caused by a alarm signaled during testrun.
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.AlarmException.#ctor(System.String,Kostal.Testman.Framework.Base.ITestStepResult,Kostal.Testman.Framework.Base.AlarmChannelType)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.AlarmException" /> class.
 </summary>
 <param name="section">Name of the section that was executed when alarm occured.</param>
 <param name="teststep">Instance of the teststep that was performed when alarm occured.</param>
 <param name="alarmType">The type of the alert.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.AlarmException.#ctor(System.String,System.String,Kostal.Testman.Framework.Base.ITestStepResult,Kostal.Testman.Framework.Base.AlarmChannelType)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.AlarmException" /> class.
 </summary>
 <param name="message">A message providing additional description about the alarm.</param>
 <param name="section">Name of the section that was executed when alarm occured.</param>
 <param name="teststep">Instance of the teststep that was performed when alarm occured.</param>
 <param name="alarmType">The type of the alert.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.AlarmException.#ctor(System.String,System.Exception,System.String,Kostal.Testman.Framework.Base.ITestStepResult,Kostal.Testman.Framework.Base.AlarmChannelType)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.AlarmException" /> class.
 </summary>
 <param name="message">A message providing additional description about the alarm.</param>
 <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
 <param name="section">Name of the section that was executed when alarm occured.</param>
 <param name="teststep">Instance of the teststep that was performed when alarm occured.</param>
 <param name="alarmType">The type of the alert.</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.AlarmException.Section">
 <summary>
 Gets a value indicating the name of section that was executed when the alarm occured.
 </summary>
 <returns>Name of section that was executed when alarm occured.</returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.AlarmException.TestStep">
 <summary>
 Gets a value indicating the teststep that was executed when the alarm occured.
 </summary>
 <returns>Last executed teststep as <see cref="T:Kostal.Testman.Framework.Base.ITestStepResult"/></returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.AlarmException.AlarmType">
 <summary>
 Gets the type of the alarm.
 </summary>
 <returns>
 The type of the alarm.
 </returns>
</member>
<member name="T:Kostal.Testman.Framework.Base.ArticleBuilder">
 <summary>
 Builder to create an ArticleConfigurationSet using simple add routines.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleBuilder.#ctor(System.String)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.ArticleBuilder"/> class.
 </summary>
 <param name="key">identifier for new article.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleBuilder.AddFile(System.String)">
 <summary>
 Adds a new flowFile to the article.
 </summary>
 <param name="filename">name and path of the flowFile to be added.</param>
 <returns>true if file was added; otherwise, false</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleBuilder.AddTag(Kostal.Testman.Framework.Base.ArticleAttribute,System.String)">
 <summary>
 Adds a tag to the article. 
 A tag is a value that is attached to a certain enumeration value of InfoItem enumeration.
 This routine will not overwrite any existing value.
 </summary>
 <param name="type">the name of tag as InfoItem</param>
 <param name="value">the value to be attached to this tag</param>
 <returns>true if value could be added; otherwise, false</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleBuilder.AddTag(Kostal.Testman.Framework.Base.ArticleAttribute,System.String,System.Boolean)">
 <summary>
 Adds a tag to the article. 
 A tag is a value that is attached to a certain enumeration value of InfoItem enumeration.
 </summary>
 <param name="type">the name of tag as InfoItem</param>
 <param name="value">the value to be attached to this tag</param>
 <param name="overwrite">if true existing values will be overwritten, if false existing values will be kept.</param>
 <returns>true if value could be added; otherwise, false</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleBuilder.AddCustomTag(System.String,System.String,System.Boolean)">
 <summary>
 Adds a user-specific or custom tag to the article. This tag is a key-value combination where the key must be unique over all tags (InfoItems and custom tags).
 This routine will not overwrite any existing value.
 </summary>
 <param name="key">name of the tag as string</param>
 <param name="value">value to be attached to this tag</param>
 <param name="isShown">if true it will be listed in UI, if false it will be hidden.</param>
 <returns>true if value could be added; otherwise, false</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleBuilder.AddCustomTag(System.String,System.String,System.Boolean,System.Boolean)">
 <summary>
 Adds a user-specific or custom tag to the article. This tag is a key-value combination where the key must be unique over all tags (InfoItems and custom tags).
 </summary>
 <param name="key">name of the tag as string</param>
 <param name="value">value to be attached to this tag</param>
 <param name="isShown">if true it will be listed in UI, if false it will be hidden.</param>
 <param name="overwrite">if true existing values will be overwritten, if false existing values will be kept.</param>
 <returns>true if value could be added; otherwise, false</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleBuilder.Article">
 <summary>
 Gets a value representing the article build by this builder.
 </summary>
 <value></value>
 <returns>the build article as ArticleConfigurationSet</returns>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.ArticleCollection">
 <summary>
 Container for articles used by testman framework
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleCollection.AddRange(System.Collections.Generic.IEnumerable{Kostal.Testman.Framework.Base.ArticleConfigurationSet},System.Int32@)">
 <summary>
 Adds multiple articles to this collection.
 </summary>
 <param name="items">articles to be added in a enumerable collection of ArticleConfigurationSet</param>
 <param name="invalidArticleCount">Return the number of articles that are marked with Valid = false</param>
 <returns>The number of articles added to this collection</returns>
 <exception cref="T:Kostal.Testman.Framework.Base.ArticleException">In case of problems when adding the items</exception>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleCollection.Add(Kostal.Testman.Framework.Base.ArticleConfigurationSet)">
 <summary>
 Adds a new article to this collection.
 </summary>
 <param name="article">article to be added as ArticleConfigurationSet</param>
 <exception cref="T:Kostal.Testman.Framework.Base.XmlException">in case of a duplicate key of two articles or unvalid key.</exception>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleCollection.IsArticleExisting(System.String)">
 <summary>
 Checks if a article with provided key is registered in this collection
 </summary>
 <param name="key">article key as string</param>
 <returns>true if article is existing; otherwise, false</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleCollection.GetArticle(System.String)">
 <summary>
 Returns the instance of an article that is represented by a key
 </summary>
 <param name="key">key of article to be returned</param>
 <returns>the article as ArticleConfigurationSet</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleCollection.Remove(System.String)">
 <summary>
 Removes article registered by provided key from this collection
 </summary>
 <param name="key">key of article to be removed as string.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleCollection.RemoveAll">
 <summary>
 Removes all currently registered articles from this collection.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.CoreException">
 <summary>
 Represents errors that are caused by the testman framework core assemblies.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.CoreException.#ctor(System.String)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.CoreException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.CoreException.#ctor(System.String,System.Exception)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.CoreException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.CoreException.#ctor(System.Exception,System.String,System.Object[])">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.CoreException"/>
 </summary>
 <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
 <param name="format">The error message  as a composite format string.</param>
 <param name="args">An object array that contains zero or more objects to format. </param>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.ExecutionEngineException">
 <summary>
 Represents errors that occured during execution within the ExecutionEngine
 </summary>
</member>
<member name="M:Kostal.Testman.Framework.Base.ExecutionEngineException.#ctor">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.ExecutionEngineException"/>
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ExecutionEngineException.#ctor(System.String)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.ExecutionEngineException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ExecutionEngineException.#ctor(System.String,System.Exception)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.ExecutionEngineException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.ExecutionException">
 <summary>
 Represents errors that occured right within the execution flow
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ExecutionException.#ctor(System.String,Kostal.Testman.Framework.Base.ITestStepResult)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.ExecutionException" /> class.
 </summary>
 <param name="section">Name of the section that was executed when failure occured.</param>
 <param name="teststep">Instance of the teststep that was performed when failure occured.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.ExecutionException.#ctor(System.String,System.String,Kostal.Testman.Framework.Base.ITestStepResult)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.ExecutionException" /> class.
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <param name="sectionId">Name of the section that was executed when failure occured.</param>
 <param name="teststep">Instance of the teststep that was performed when failure occured.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.ExecutionException.#ctor(System.String,System.Exception,System.String,Kostal.Testman.Framework.Base.ITestStepResult)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.ExecutionException" /> class.
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
 <param name="sectionId">Name of the section that was executed when failure occured.</param>
 <param name="teststep">Instance of the teststep that was performed when failure occured.</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.ExecutionException.SectionId">
 <summary>
 Gets a value indicating the name of section that was executed when the error occured.
 </summary>
 <returns>Name of section that was executed when error occured.</returns>
</member>
<member name="P:Kostal.Testman.Framework.Base.ExecutionException.TestStepResult">
 <summary>
 Gets a value indicating the teststep that was executed when the error occured.
 </summary>
 <returns>Last executed teststep as <see cref="T:Kostal.Testman.Framework.Base.ITestStepResult"/></returns>
</member>
<member name="M:Kostal.Testman.Framework.Base.XmlException.#ctor(System.String)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.XmlException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.XmlException.#ctor(System.String,System.Exception)">
 <summary>
 Initializes a new instance of <see cref="T:Kostal.Testman.Framework.Base.XmlException"/>
 </summary>
 <param name="message">The error message that explains the reason for the exception.</param>
 <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.MachineStates">
 <summary>
 Specifies the possible stable states of a station state machine
 </summary>
 <remarks></remarks>
</member>
<member name="F:Kostal.Testman.Framework.Base.MachineStates.Down">
 <summary>
 The system is not initialized or has been shut down
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.MachineStates.Off">
 <summary>
 The station is off
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.MachineStates.On">
 <summary>
 The station is on
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.MachineStates.Run">
 <summary>
 The station is running
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.MachineStates.Test">
 <summary>
 The station is testing
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.DocLevel">
 <summary>
 Available statistic levels
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.CompareModes">
 <summary>
 The mode of comparions of the measured value against limit
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.CompareModes.FixTrue">
 <summary>
 The evaluation will be always result in a true value.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.CompareModes.InLimit">
 <summary>
 The value must be in the range of the limits.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.CompareModes.OutLimit">
 <summary>
 The value must be out of the range of the limits.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.CompareModes.FixFalse">
 <summary>
 The evaluation will be always result in a false value.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.CompareModes.JustBool">
 <summary>
 The evaluation will be result in a boolean value.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.CompareModes.NullOrEmpty">
 <summary>
 The evaluation will be result in true, if the value is null or empty.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.CompareModes.NotNullOrEmpty">
 <summary>
 The evaluation will be result in true, if the value is not null oand also not empty.
 </summary>
</member>
<member name="F:Kostal.Testman.Framework.Base.CompareModes.RegularExpression">
 <summary>
 Lower and upper limit contains a regular expression. If lower and upper limit is filled, one of both must be match to get a 'true' as result. 
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.ITestStepDefinition">
 <summary>
 The interface, that defines a teststep
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepDefinition.SectionDefinition">
 <summary>
 Gets the section definition.
 </summary>
 <value>
 The section definition.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepDefinition.PluginName">
 <summary>
 Gets or sets the name of the plugin.
 </summary>
 <value>
 The name of the plugin.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepDefinition.CategoryName">
 <summary>
 Gets or sets the kind id of the command.
 </summary>
 <value>
 The kind of the command.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepDefinition.CommandName">
 <summary>
 Gets or sets the name of the command.
 </summary>
 <value>
 The name of the command.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepDefinition.Id">
 <summary>
 Gets the identifier.
 </summary>
 <value>
 The identifier.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepDefinition.TextStandard">
 <summary>
 Gets or sets the standard text.
 </summary>
 <value>
 The standard text.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepDefinition.TextAlternative">
 <summary>
 Gets or sets the alternative text.
 </summary>
 <value>
 The alternative text.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepDefinition.Text">
 <summary>
 Gets the text.
 </summary>
 <value>
 The text.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepDefinition.MaximalExecutions">
 <summary>
 Gets or sets the maximal executions.
 </summary>
 <value>
 The maximal executions.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepDefinition.DelayBeforeExecution">
 <summary>
 Gets or sets the delay before execution in milliseconds.
 </summary>
 <value>
 The delay before execution.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepDefinition.CompareMode">
 <summary>
 Gets or sets the CompareMode.
 </summary>
 <value>
 The CompareMode.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepDefinition.Format">
 <summary>
 Gets or sets the format.
 </summary>
 <value>
 The format.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepDefinition.Unit">
 <summary>
 Gets or sets the unit.
 </summary>
 <value>
 The unit.
 </value>
</member>
<member name="P:Kostal.Testman.Framework.Base.ITestStepDefinition.ExternalId">
 <summary>
 Gets or sets the external identifier.
 </summary>
 <value>
 The external identifier.
 </value>
</member>
<member name="T:Kostal.Testman.Framework.Base.ArticleConfigurationFile">
 <summary>
 References a flow file located on local harddrive
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleConfigurationFile.#ctor(Kostal.Testman.Framework.Base.ArticleConfigurationSet,System.String)">
 <summary>
 Initializes a new instance of the ArticleConfigurationFile class.
 </summary>
 <param name="parent">connection to the article the file referres to.</param>
 <param name="fileName">name and path referencing the file.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleConfigurationFile.#ctor">
 <summary>
 Initializes a new instance of the ArticleConfigurationFile class.
 The properties Parent and FileName as still null
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationFile.Parent">
 <summary>
 Gets the value representing the article this configuration element is attached to.
 </summary>
 <value>Parent article as ArticleConfigurationSet</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationFile.FileName">
 <summary>
 Gets the value representing the reference to flow file on local harddisk
 </summary>
 <value></value>
 <returns>Filename and path (relative or absolut) to the flow file represented by this class.</returns>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.ArticleConfigurationItem">
 <summary>
 A configuration item that can be used for article configuration
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleConfigurationItem.#ctor(System.String,System.String,System.Boolean,Kostal.Testman.Framework.Base.ArticleConfigurationSet)">
 <summary>
 Initializes a new instance of the ArticleConfigurationItem class.
 </summary>
 <param name="key">identifier for this item.</param>
 <param name="value">the value of this item.</param>
 <param name="show">true if value should be shown in article selector.</param>
 <param name="parent">reference to the parent article.</param>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleConfigurationItem.#ctor">
 <summary>
 Initializes a new instance of the ArticleConfigurationItem class.
 All properties of this class are still null.
 </summary>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationItem.Key">
 <summary>
 Gets a value representing the identifier of this ArticleConfigurationItem
 </summary>
 <value></value>
 <returns>key as string</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationItem.Value">
 <summary>
 Gets a value representing the value of this item
 </summary>
 <value></value>
 <returns>value as string</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationItem.Show">
 <summary>
 Gets a value indicating wether this item will be shown in UI or not
 </summary>
 <value></value>
 <returns>true if it is shown; otherwise, false</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationItem.Parent">
 <summary>
 Gets the value representing the article this configuration element is attached to.
 </summary>
 <value>Parent article as ArticleConfigurationSet</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.ArticleConfigurationSet">
 <summary>
 The complete configuration of a single article 
 </summary>
 <remarks>If it is required to build ArticleConfigurationSet manually use the Testman.Framework.Base.ArticleBuilder class.</remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleConfigurationSet.#ctor(System.String)">
 <summary>
 Initializes a new instance of ArticleConfigurationSet
 </summary>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationSet.Key">
 <summary>
 Gets a value representing the unique identifier of this configuration set.
 </summary>
 <value></value>
 <returns>key as string</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationSet.Description">
 <summary>
 Gets or sets the value describing this ArticleConfigurationSet
 </summary>
 <value>description as string</value>
 <returns>description as string</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationSet.Enabled">
 <summary>
 Gets a value indicating wether the article is enabled or not
 </summary>
 <value></value>
 <returns>true if enabled; otherwise, false</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationSet.ValidFrom">
 <summary>
 Gets a value indicating the start of validity for this article
 </summary>
 <value></value>
 <returns>the dateTime when this article gets active.</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationSet.ValidTo">
 <summary>
 Gets a value indicating the end of lifetime for this article
 </summary>
 <value></value>
 <returns>dateTime when this article gets invalid</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationSet.IsValid">
 <summary>
 Returns a value indicating wether this article is valid or not
 </summary>
 <value></value>
 <returns>true if article is valid; otherwise, false.</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationSet.ConfigurationItems">
 <summary>
 Returns a collection of all configuration items attached to this ArticleConfigurationSet
 </summary>
 <value></value>
 <returns>list of attached ArticleConfigurationItem objects</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationSet.ConfigurationFiles">
 <summary>
 Returns a readonly collection of all flow files attached to this ArticleConfigurationSet
 </summary>
 <value></value>
 <returns>readonly collection of all attached ArticleConfigurationFile objects.</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleConfigurationSet.AddConfigurationFile(Kostal.Testman.Framework.Base.ArticleConfigurationFile)">
 <summary>
 Adds an additional flow file to this ArticleConfigurationSet
 </summary>
 <param name="articleConfigurationFile">flow file represented by ArticleConfigurationFile</param>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleConfigurationSet.ContainsItem(System.String)">
 <summary>
 Checks if this article configuration contains a certain tag
 </summary>
 <param name="keyToBeChecked">name of the tag to be checked</param>
 <returns>true if tag exists; otherwise, false</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationSet.Items">
 <summary>
 Returns a readonly collection of all tags currently attached to this article.
 </summary>
 <value></value>
 <returns>readonly collection containing attached ArticleConfigurationItem</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationSet.Item(System.String)">
 <summary>
 Returns a tag identified by a certain key.
 This will return tags identified by InfoItems as well as custom tags.
 </summary>
 <param name="keyToBeChecked">key identifying the tag to be returned</param>
 <value></value>
 <returns>the tag as ArticleConfigurationItem; nothing if tag doesn't exist.</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleConfigurationSet.GetInfo(Kostal.Testman.Framework.Base.ArticleAttribute)">
 <summary>
 Returns the value of a standard tag
 </summary>
 <param name="articleAttribute">the tag to be returned as InfoItem</param>
 <returns>value as String; nothing if tag doesn't exist.</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleConfigurationSet.GetInfo(System.String)">
 <summary>
 Returns the value of a tag identified by string id
 </summary>
 <param name="articleAttributeName">the tag to be returned as id string</param>
 <returns>value as String; nothing if tag doesn't exist.</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.ArticleConfigurationSet.ContainsItem(Kostal.Testman.Framework.Base.ArticleAttribute)">
 <summary>
 Checks if this article configuration contains a certain tag
 </summary>
 <param name="articleAttribute">name of the tag to be checked as enumeration value of InfoItem</param>
 <returns>true if tag exists; otherwise, false</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Testman.Framework.Base.ArticleConfigurationSet.Item(Kostal.Testman.Framework.Base.ArticleAttribute)">
 <summary>
 Returns a standard tag identified by a InfoItem value.
 </summary>
 <param name="articleAttribute">InfoItem value identifying the tag to be returned</param>
 <value></value>
 <returns>the tag as ArticleConfigurationItem; nothing if tag doesn't exist.</returns>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.TestState">
 <summary>
 Represents the current status of a test
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Testman.Framework.Base.UserChangedEventArgs">
 <summary>
 Provides data for the UserChanged event.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Testman.Framework.Base.UserChangedEventArgs.#ctor(Kostal.Testman.Framework.Base.UserLevel)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Testman.Framework.Base.UserChangedEventArgs" /> class.
 </summary>
 <param name="userLevel">The <see cref="P:Kostal.Testman.Framework.Base.UserChangedEventArgs.UserLevel"/> now active.</param>
</member>
<member name="P:Kostal.Testman.Framework.Base.UserChangedEventArgs.UserLevel">
 <summary>
 Gets the active <see cref="P:Kostal.Testman.Framework.Base.UserChangedEventArgs.UserLevel"/> level.
 </summary>
</member>
<member name="T:Kostal.Testman.Framework.Base.UserLevel">
 <summary>
 Available levels of access within testman framework
 </summary>
 <remarks></remarks>
</member>
<member name="F:Kostal.Testman.Framework.Base.UserLevel.None">
 <summary>
 No valid UserLevel.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Kostal.Testman.Framework.Base.UserLevel.Operator">
 <summary>
 Simplest level for operating personal.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Kostal.Testman.Framework.Base.UserLevel.Service">
 <summary>
 The level used by service personal
 </summary>
 <remarks></remarks>
</member>
<member name="F:Kostal.Testman.Framework.Base.UserLevel.Developer">
 <summary>
 The level identifying a developer
 </summary>
 <remarks></remarks>
</member>
<member name="F:Kostal.Testman.Framework.Base.UserLevel.All">
 <summary>
 Operator, Service or Developer
 </summary>
</member>
</members>
</doc>
