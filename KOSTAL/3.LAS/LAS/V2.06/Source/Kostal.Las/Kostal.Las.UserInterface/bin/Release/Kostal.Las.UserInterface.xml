<?xml version="1.0"?>
<doc>
<assembly>
<name>
Kostal.Las.UserInterface
</name>
</assembly>
<members>
<member name="T:Kostal.Las.UserInterface.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Kostal.Las.UserInterface.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Kostal.Las.UserInterface.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:Kostal.Las.UserInterface.MenuItemModel.MenuItems">
 <summary>
 Gets the menu items that are Visible = True
 </summary>
 <value>
 The visible menu items.
 </value>
</member>
<member name="P:Kostal.Las.UserInterface.MenuItemModel.AllMenuItems">
 <summary>
 Gets all menu items. Also the Visible = False Items
 </summary>
 <value>
 All menu items.
 </value>
</member>
<member name="M:Kostal.Las.UserInterface.MenuItemModel.Dispose(System.Boolean)">
 <summary>
 Child classes can override this method to perform 
 clean-up logic, such as removing event handlers.
 </summary>
</member>
<member name="T:Kostal.Las.UserInterface.CounterEntity">
 <summary>
 Simple container to keep count of passed and failed testruns.
 Used for serialization
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Las.UserInterface.CounterEntity.#ctor">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Las.UserInterface.CounterEntity" /> class.
 Pass and Fail properties both have a value of zero.
 </summary>
</member>
<member name="M:Kostal.Las.UserInterface.CounterEntity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
 <summary>
 Initializes a new instance of CounterEntity with serialized data.
 </summary>
 <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
 <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/>" that contains contextual information about the source or destination.</param>
 <exception cref="T:System.ArgumentNullException">The info parameter is null.</exception>
 <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/>" is zero (0).</exception>
 <remarks></remarks>
</member>
<member name="M:Kostal.Las.UserInterface.CounterEntity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
 <summary>
 Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
 </summary>
 <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
 <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
 <exception cref="T:System.Security.SecurityException">
 The caller does not have the required permission.
   </exception>
</member>
<member name="P:Kostal.Las.UserInterface.CounterEntity.Pass">
 <summary>
 Gets or sets the value indicating the count of successful tests.
 </summary>
 <value>count of successful tests</value>
 <returns>new count of successful tests.</returns>
 <remarks></remarks>
</member>
<member name="P:Kostal.Las.UserInterface.CounterEntity.Fail">
 <summary>
 Gets or sets the value indicating the count of failed tests.
 </summary>
 <value>count of failed tests</value>
 <returns>new count of failed tests.</returns>
 <remarks></remarks>
</member>
<member name="M:Kostal.Las.UserInterface.CounterEntity.ToString">
 <summary>
 Returns a <see cref="T:System.String" /> that represents this instance.
 </summary><returns>
 A <see cref="T:System.String" /> that represents this instance.
 </returns>
</member>
<member name="T:Kostal.Las.UserInterface.CounterState">
 <summary>
 Specifies the current state of counter.
 It has either counted a successful or failed run or it's waiting for a result.
 </summary>
</member>
<member name="T:Kostal.Las.UserInterface.ICounterController">
 <summary>
 Controller to count the successful and failed testruns and provide statistical data.
 </summary>
</member>
<member name="P:Kostal.Las.UserInterface.ICounterController.Fail">
 <summary>
 Gets the counter counting failed testruns.
 </summary>
 <returns>The counter counting failed testruns as <see cref="T:Kostal.Las.UserInterface.ISingleCounter"/></returns>
</member>
<member name="P:Kostal.Las.UserInterface.ICounterController.Success">
 <summary>
 Gets the counter counting successful testruns.
 </summary>
 <returns>The counter counting successful testruns as <see cref="T:Kostal.Las.UserInterface.ISingleCounter"/></returns>
</member>
<member name="P:Kostal.Las.UserInterface.ICounterController.State">
 <summary>
 Gets or sets a value representing the current counter state.
 </summary>
 <value>
 The new state of counter as <see cref="T:Kostal.Las.UserInterface.CounterState"/>.
 </value>
 <returns>Current state of counter as <see cref="T:Kostal.Las.UserInterface.CounterState"/></returns>
</member>
<member name="P:Kostal.Las.UserInterface.ICounterController.Ppm">
 <summary>
 Gets or sets the value indicating the failures in 'Parts per million'.
 </summary>
 <value>
 New ppm value.
 </value>
 <returns>current ppm value</returns>
</member>
<member name="P:Kostal.Las.UserInterface.ICounterController.Percent">
 <summary>
 Gets the value indicating the percentage of failures in amount of overall measured items.
 </summary>
 <returns>current percentage of failures.</returns>
</member>
<member name="M:Kostal.Las.UserInterface.ICounterController.ClearResultIndication">
 <summary>
 Clears the result indication.
 </summary>
</member>
<member name="M:Kostal.Las.UserInterface.ICounterController.Reset">
 <summary>
 Resets this instance.
 </summary>
</member>
<member name="M:Kostal.Las.UserInterface.ICounterController.Restore(System.String)">
 <summary>
 Restores the counter using specified counter name.
 </summary>
 <param name="counterName">Name of the counter.</param>
</member>
<member name="M:Kostal.Las.UserInterface.ICounterController.Store(System.String)">
 <summary>
 Stores this object using specified counter name.
 </summary>
 <param name="counterName">Name of the counter.</param>
</member>
<member name="P:Kostal.Las.UserInterface.ICounterController.ArticleIndependent">
 <summary>
 Set a fix Countername if this Name is set
 </summary>
 <remarks></remarks>
</member>
<member name="P:Kostal.Las.UserInterface.ICounterController.Enabled">
 <summary>
 Enables the counter
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Las.UserInterface.IRuntimeManager">
 <summary>
 The runtime manager to fetch runtime instances of classes
 </summary>
</member>
<member name="M:Kostal.Las.UserInterface.IRuntimeManager.Resolve``1">
 <summary>
 Register and Resolves a certain class or interface from or to runtime container.
 </summary>
 <typeparam name="T"></typeparam><returns></returns>
</member>
<member name="T:Kostal.Las.UserInterface.ISingleCounter">
 <summary>
 Simple counter that manages an integer value on provides events when value changes
 </summary>
</member>
<member name="P:Kostal.Las.UserInterface.ISingleCounter.Value">
 <summary>
 Gets or sets the value representing the count.
 </summary>
 <value>
 The new counter value.
 </value>
 <returns>The current counter value.</returns>
</member>
<member name="M:Kostal.Las.UserInterface.ISingleCounter.Reset">
 <summary>
 Resets this counter instance.
 </summary>
</member>
<member name="M:Kostal.Las.UserInterface.ISingleCounter.SetValue(System.Int32)">
 <summary>
 Sets the value of this counter instance.
 </summary>
 <param name="value">The new value.</param>
</member>
<member name="M:Kostal.Las.UserInterface.ISingleCounter.Increase">
 <summary>
 Increases the value by one.
 </summary>
</member>
<member name="M:Kostal.Las.UserInterface.ISingleCounter.Decrease">
 <summary>
 Decreases the value by one.
 </summary>
</member>
<member name="T:Kostal.Las.UserInterface.Design.Visibilities">
 <summary>
 Indicates the user dependent visibility of an ui element
 </summary>
</member>
<member name="F:Kostal.Las.UserInterface.Design.Visibilities.None">
 <summary>
 Never visible
 </summary>
</member>
<member name="F:Kostal.Las.UserInterface.Design.Visibilities.Operator">
 <summary>
 Visible only for the operator
 </summary>
</member>
<member name="F:Kostal.Las.UserInterface.Design.Visibilities.Service">
 <summary>
 Visible only for the service
 </summary>
</member>
<member name="F:Kostal.Las.UserInterface.Design.Visibilities.OperatorAndService">
 <summary>
 Visible for the operator and service
 </summary>
</member>
<member name="F:Kostal.Las.UserInterface.Design.Visibilities.Developer">
 <summary>
 Visible only for the developer
 </summary>
</member>
<member name="F:Kostal.Las.UserInterface.Design.Visibilities.OperatorAndDeveloper">
 <summary>
 Visible for the operator and developer
 </summary>
</member>
<member name="F:Kostal.Las.UserInterface.Design.Visibilities.ServiceAndDeveloper">
 <summary>
 Visible for the service and developer
 </summary>
</member>
<member name="F:Kostal.Las.UserInterface.Design.Visibilities.All">
 <summary>
 Visible for all user levels
 </summary>
</member>
<member name="T:Kostal.Las.UserInterface.Globalization.Localizer">
 <summary>
 Class the get localized strings out of a translation file
 </summary>
</member>
<member name="M:Kostal.Las.UserInterface.Globalization.Localizer.#ctor(System.Boolean,System.Int32)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Las.UserInterface.Globalization.Localizer"/> class.
 </summary>
 <param name="isFrameworkDllBetweenInCallStack">if set to <c>true</c> [is framework DLL in call stack].</param>
</member>
<member name="P:Kostal.Las.UserInterface.Helpers.ColorHelper.CounterStateGoodColor">
 <summary>
 Gets the color of the counter state good.
 </summary>
</member>
<member name="P:Kostal.Las.UserInterface.Helpers.ColorHelper.CounterStateBadColor">
 <summary>
 Gets the color of the counter state bad.
 </summary>
</member>
<member name="P:Kostal.Las.UserInterface.Helpers.ColorHelper.CounterStateIgnoredColor">
 <summary>
 Gets the color of the counter state ignored.
 </summary>
</member>
<member name="P:Kostal.Las.UserInterface.Helpers.ColorHelper.CounterStateInnerFrameColor">
 <summary>
 Gets the color of the counter innerframe.
 </summary>
</member>
<member name="P:Kostal.Las.UserInterface.Helpers.ColorHelper.CounterStateNoneColor">
 <summary>
 Gets the color of the counter state none or in testing
 </summary>
</member>
<member name="P:Kostal.Las.UserInterface.Helpers.ColorHelper.CounterPPMBorderColor">
 <summary>
 Gets the color of border of the PPM view.
 </summary>
</member>
<member name="M:Kostal.Las.UserInterface.PropertyHelper.GetPropertyName(System.Object)">
 <summary>
 </summary>
 <param name="o">object</param>
</member>
<member name="M:Kostal.Las.UserInterface.ViewModelBase.#ctor">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Las.UserInterface.ViewModelBase"/> class.
 The uiDispatcher will be initialized with the CurrentDispatcher Thread
 If you did not create this class from the main (UI) thread you get an exeption
 </summary>
 <exception cref="T:System.NotSupportedException">Creating a ViewModelBase class is not allowed, if not done via UI-thread.</exception>
</member>
<member name="M:Kostal.Las.UserInterface.ViewModelBase.#ctor(System.Boolean)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Las.UserInterface.ViewModelBase"/> class.
 The uiDispatcher will be initialized with the CurrentDispatcher Thread
 </summary>
 <param name="preventCrossThreadCheck">if set to <c>true</c> there is no check if this class is created from a UI-thread.</param>
 <exception cref="T:System.NotSupportedException">Creating a ViewModelBase class is not allowed, if not done via UI-thread.</exception>
</member>
<member name="M:Kostal.Las.UserInterface.ViewModelBase.#ctor(System.Windows.Threading.Dispatcher)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Las.UserInterface.ViewModelBase"/> class.
 </summary>
 <param name="uiDispatcher">The UI dispatcher.</param>
</member>
<member name="P:Kostal.Las.UserInterface.ViewModelBase.Localizer">
 <summary>
 Gets the localizer of this viewmodel
 </summary>
</member>
<member name="P:Kostal.Las.UserInterface.ViewModelBase.UiDispatcher">
 <summary>
 Gets the UI Dispatcher of the viewmodel
 </summary>
</member>
<member name="P:Kostal.Las.UserInterface.ViewModelBase.DisplayName">
 <summary>
 Returns the user-friendly name of this object.
 Child classes can set this property to a new value,
 or override it to determine the value on-demand.
 </summary>
</member>
<member name="M:Kostal.Las.UserInterface.ViewModelBase.ToString">
 <summary>
 Returns a string that represents the current object.
 </summary>
 <returns>
 A string that represents the current object.
 </returns>
 <filterpriority>2</filterpriority>
</member>
<member name="M:Kostal.Las.UserInterface.ViewModelBaseDisposable.#ctor">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Las.UserInterface.ViewModelBase"/> class.
 The uiDispatcher will be initialized with the CurrentDispatcher Thread
 If you did not create this class from the main (UI) thread you get an exeption
 </summary>
 <exception cref="T:System.NotSupportedException">Creating a ViewModelBase class is not allowed, if not done via UI-thread.</exception>
</member>
<member name="M:Kostal.Las.UserInterface.ViewModelBaseDisposable.#ctor(System.Boolean)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Las.UserInterface.ViewModelBase"/> class.
 The uiDispatcher will be initialized with the CurrentDispatcher Thread
 </summary>
 <param name="preventCrossThreadCheck">if set to <c>true</c> there is no check if this class is created from a UI-thread.</param>
 <exception cref="T:System.NotSupportedException">Creating a ViewModelBase class is not allowed, if not done via UI-thread.</exception>
</member>
<member name="M:Kostal.Las.UserInterface.ViewModelBaseDisposable.#ctor(System.Windows.Threading.Dispatcher)">
 <summary>
 Initializes a new instance of the <see cref="T:Kostal.Las.UserInterface.ViewModelBase"/> class.
 </summary>
 <param name="uiDispatcher">The UI dispatcher.</param>
</member>
<member name="P:Kostal.Las.UserInterface.ViewModelBaseDisposable.Localizer">
 <summary>
 Gets the localizer of this viewmodel
 </summary>
</member>
<member name="P:Kostal.Las.UserInterface.ViewModelBaseDisposable.UiDispatcher">
 <summary>
 Gets the UI Dispatcher of the viewmodel
 </summary>
</member>
<member name="P:Kostal.Las.UserInterface.ViewModelBaseDisposable.DisplayName">
 <summary>
 Returns the user-friendly name of this object.
 Child classes can set this property to a new value,
 or override it to determine the value on-demand.
 </summary>
</member>
<member name="M:Kostal.Las.UserInterface.ViewModelBaseDisposable.Dispose(System.Boolean)">
 <summary>
 Child classes can override this method to perform 
 clean-up logic, such as removing event handlers.
 </summary>
</member>
<member name="M:Kostal.Las.UserInterface.ViewModelBaseDisposable.Finalize">
 <summary>
 Useful for ensuring that ViewModel objects are properly garbage collected.
 </summary>
</member>
<member name="M:Kostal.Las.UserInterface.ViewModelBaseDisposable.ToString">
 <summary>
 Returns a string that represents the current object.
 </summary>
 <returns>
 A string that represents the current object.
 </returns>
 <filterpriority>2</filterpriority>
</member>
<member name="T:Kostal.Las.UserInterface.CounterView">
 <summary>
 Gui for the counters Success, Failed, Percent and PPM
 </summary>
 <remarks></remarks>
</member>
<member name="M:Kostal.Las.UserInterface.CounterView.#ctor">
 <summary>
 new inctance of Easy Gui
 </summary>
 <remarks></remarks>
</member>
<member name="T:Kostal.Las.UserInterface.AlarmPromptControl">
<summary>
AlarmPromptControl
</summary>
</member>
<member name="M:Kostal.Las.UserInterface.AlarmPromptControl.InitializeComponent">
<summary>
InitializeComponent
</summary>
</member>
<member name="T:Kostal.Las.UserInterface.NoPromptControl">
<summary>
NoPromptControl
</summary>
</member>
<member name="M:Kostal.Las.UserInterface.NoPromptControl.InitializeComponent">
<summary>
InitializeComponent
</summary>
</member>
<member name="T:Kostal.Las.UserInterface.SinglePromptControl">
<summary>
SinglePromptControl
</summary>
</member>
<member name="M:Kostal.Las.UserInterface.SinglePromptControl.InitializeComponent">
<summary>
InitializeComponent
</summary>
</member>
</members>
</doc>
